@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.active = 3;
}

@{
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
}

<!-- Search Start -->
<div class="container-fluid bg-primary mb-5 wow fadeIn" data-wow-delay="0.1s" style="padding: 35px;">
    <div class="container">
        <div class="row align-items-center">

            <div class="row g-2">

                <!-- Search Input and Button -->
                <div class="row g-2 justify-content-end">
                    <div class="col-md-auto mb-3" style="width: 40%;">
                        <div class="input-group">
                            <input id="searchInput" type="text" class="form-control border-0 py-3" placeholder="Search Keyword">
                            <button class="btn btn-dark border-0 py-3" onclick="TimKiem()">Tìm kiếm</button>
                        </div>
                    </div>
                </div>

                <div class="row g-2 justify-content-between">
                    <div class="col-md-3">
                        <label for="TheLoai" style="font-weight: bold">Thể loại</label>
                        <select id="theLoaiSelect" class="form-select border-0 py-3">
                            <option value="All">Tất cả</option>
                            <option value="Truyện thiếu nhi">Truyện thiếu nhi</option>
                            <option value="Tiểu thuyết">Tiểu thuyết</option>
                            <option value="Kỹ năng sống">Kỹ năng sống</option>
                            <option value="Ngôn tình">Ngôn tình</option>
                            <option value="Sách giáo khoa">Sách giáo khoa</option>
                            <option value="Sách ngoại ngữ">Sách ngoại ngữ</option>
                            <option value="Truyện ngắn">Truyện ngắn</option>
                            <option value="Văn học">Sách ngoại ngữ</option>
                            <option value="Sách tham khảo">Sách tham khảo</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label for="NgonNgu" style="font-weight: bold">Ngôn ngữ</label>
                        <select id="ngonNguSelect" class="form-select border-0 py-3">
                            <option value="All">Tất cả</option>
                            <option value="Tiếng việt">Tiếng Việt</option>
                            <option value="Tiếng anh">Tiếng Anh</option>
                            <option value="Tiếng trung">Tiếng Trung</option>
                            <option value="Tiếng pháp">Tiếng Pháp</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label for="NamXB" style="font-weight: bold">Năm xuất bản</label>
                        <select id="namXBSelect" class="form-select border-0 py-3">
                            <option value="All">Tất cả</option>
                            <!-- Script to generate years dynamically -->
                            <script>
                                var currentYear = new Date().getFullYear();
                                for (var i = currentYear; i >= 2015; i--) {
                                    document.write('<option value="' + i + '">' + i + '</option>');
                                }
                            </script>
                        </select>
                    </div>
                    <!-- Filter Button -->
                    <div class="col-md-3 align-self-end">
                        <button class="btn btn-dark border-0 w-100 py-3" onclick="LocSach()">Lọc</button>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>
<!-- Search End -->
<!-- Property List Start -->
<div class="container-xxl py-5 mx-auto">
    <div class="container">
        <div class="row g-4 justify-content-center">
            <div class="col-lg-12">
                <!-- You can add a heading here if needed -->
            </div>
        </div>

        <div class="tab-content">


            <div id="resultContainer" class="row g-4 ">

                @* Lấy ra thông tin sách *@
                @foreach (var item in Model)
                {
                    string urlImage = Url.Content(item?.urlImage?.ToString()?.Replace("~\\", "/").Replace("\\", "/") ?? "/images/default.png");
                    <!-- Display each book -->
                    <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
                        <div style="width: 300px; height: 400px; overflow: hidden; position: relative;">
                            <!-- Khung chứa ảnh -->
                                <div class="position-relative overflow-hidden" style="width: 100%; height: 100%;">
                                    <a href=""><img class="img-fluid" src="@urlImage" style="width: 100%; height: 100%; object-fit: cover;" alt=""></a>
                                </div>
                                <!-- Hiển thị số lượng sách -->
                            <div id="soLuongSachNo_@item.masach" class="bg-primary rounded text-white position-absolute start-0 top-0 m-2 mt-0 py-0 px-1" style="z-index: 0;">Số lượng: @item.soluonghientai</div>
                            <small id="soLuongSach_@item.masach" hidden>@item.soluonghientai</small>

                                <!-- Hiển thị thông tin về thể loại với nền đỏ và cách lề trên là 4 -->
                            <div id="theLoai_@item.masach" class="bg-danger rounded text-white position-absolute start-0 top-0 m-2 mt-4 py-0 px-1" style="z-index: 1;">@item.theloai</div>

                                <!-- Phần thông tin về sách -->
                                <div class="bg-white rounded-bottom text-primary" style="position: absolute; bottom: 0; left: 0; width: 100%; background-color: rgba(255, 255, 255, 0.7); padding: 10px;">
                                    <a class="d-block h5 mb-2" href="">@item.tensach</a>
                                    <h6 class="text-primary mb-3">--@item.tacgia--</h6>

                                    @if (item.soluonghientai > 5)
                                    {
                                    <button id="ThueSach" class="btn btn-outline-primary active" data-bs-toggle="pill" onclick="ThueSach('@item.masach', '@item.tensach')">Thêm giỏ hàng</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-outline-primary " data-bs-toggle="pill">Tạm ngừng mượn</button>
                                    }

                                </div>

                            </div>
                        </div>
                        }


             </div>
        </div>
    </div>
</div>

        <!-- Property List End -->
                    @*Đoạn code hiển thị bảng phân trang*@
<ul class="pagination justify-content-center" style="margin-top: 50px;">

    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">
            &laquo; Trang trước
        </a>
    </li>

                @for (int i = 1; i <= totalPages; i++)
                {
        <li class="page-item @(currentPage == i ? "active" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
        </li>
                }

    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">
            Trang tiếp theo &raquo;
        </a>
    </li>
</ul>

        <!-- Thêm dropdown và modal để chọn số lượng sách đăng ký mượn -->
<div id="dangKyDialog" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="maSachDisplay" class="modal-title"></h5>
            </div>
            <div class="modal-body">
                <label for="soLuong">Quý khách vui lòng chọn tối đa 2 quyển sách cùng loại</label>
                <label for="soLuong">Chọn số lượng sách:</label>
                <input type="number" id="soLuong" min="1" max="2" class="form-control" onkeydown="validateInput(event, 2)" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="ThemVaoGioHang()">Thêm</button>
            </div>
        </div>
    </div>
</div>

        <!-- Modal error-->
<div class="modal fade" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="ModalError" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-danger" style="color: black;">
                <span class="" id="contentModalError"></span>
            </div>
        </div>
    </div>
</div>

        <!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center" style="background-color: green; color: black;">
                <span class="" id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal thông báo-->
<div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notificationModalLabel">Thông báo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Nội dung thông báo sẽ được cập nhật tại đây -->
                <p id="notificationMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
     const initialContent = $("#resultContainer").html();
    function TimKiem() {
        console.log("Function TimKiem called");

        var search = $("#searchInput").val().trim();
        if (!search) {
            // Cập nhật nội dung của modal
            $("#notificationMessage").text("Vui lòng nhập tên sách để tìm kiếm.");
            // Hiển thị modal
            $("#notificationModal").modal('show');
            ResetView();
            return;
        }
        console.log("Dữ liệu nhận vào:", search);

        $.ajax({
            url: '@Url.Action("GetBookByName", "Book")',
            type: 'POST',
            data: { tenSach: search },
            success: function (result) {
                console.log("Phản hồi từ server:", result);
                if (result.success) {
                    UpdateView(result.sachList);
                } else {
                    // Cập nhật nội dung modal với thông báo từ server
                    $("#notificationMessage").text(result.message);
                    // Hiển thị modal
                    $("#notificationModal").modal('show');
                }
            },
            error: function (data) {
                console.log("Lỗi khi gửi yêu cầu AJAX:", data);
                // Hiển thị lỗi trong modal
                $("#notificationMessage").text("Đã xảy ra lỗi khi gửi yêu cầu. Vui lòng thử lại.");
                $("#notificationModal").modal('show');
            }
        });
    }

    // Hàm ResetView để trả về giao diện ban đầu
    function ResetView() {
        // Đặt lại nội dung của #resultContainer về nội dung ban đầu
        $("#resultContainer").html(initialContent);
    }

    function UpdateView(result) {
        $("#resultContainer").empty(); // Xóa nội dung cũ
        console.log("Hàm UpdateView đang thực hiện với kết quả:", result);

        if (Array.isArray(result) && result.length > 0) {
            $.each(result, function (index, item) {
                var baseUrl = window.location.origin;
                var urlImage = (typeof item.urlImage === "string" && item.urlImage.trim() !== "")
                    ? baseUrl + item.urlImage.replace("~", "").replace("\\", "/")
                    : "/images/default.png";

                console.log("Hình ảnh đã xử lý:", urlImage);

                var newHtml = $(`
                        <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
                            <div style="width: 300px; height: 400px; overflow: hidden; position: relative;">
                                <div class="position-relative overflow-hidden" style="width: 100%; height: 100%;">
                                    <a href="#"><img src="${urlImage}" style="width: 100%; height: 100%; object-fit: cover;" alt=""></a>
                                </div>
                                <div class="bg-primary rounded text-white position-absolute start-0 top-0 m-2 mt-0 py-0 px-1">
                                    Số lượng: ${item.soluonghientai}
                                </div>
                                <div class="bg-danger rounded text-white position-absolute start-0 top-0 m-2 mt-4 py-0 px-1">
                                    ${item.theloai}
                                </div>
                                <div class="bg-white rounded-bottom text-primary" style="position: absolute; bottom: 0; left: 0; width: 100%; background-color: rgba(255, 255, 255, 0.7); padding: 5px;">
                                    <a class="d-block h5 mb-2" href="#">${item.tensach}</a>
                                    <h6 class="text-primary mb-3">--${item.tacgia}--</h6>
                                </div>
                            </div>
                        </div>
                    `);

                $("#resultContainer").append(newHtml);
            });
        } else {
            $("#resultContainer").append('<p>Không tìm thấy sách nào.</p>');
        }
    }

    function LocSach() {
        console.log("Function LocSach called");

        var theLoai = document.getElementById("theLoaiSelect");
        var ngonNgu = document.getElementById("ngonNguSelect");
        var namXB = document.getElementById("namXBSelect");
        console.log("Thể loại chọn:", theLoai.value);
        console.log("Ngôn ngữ chọn:", ngonNgu.value);
        console.log("Năm xuất bản chọn:", namXB.value);


        $.ajax({
            url: "/Book/GetBookByCategory",
            type: "POST",
            data:
            {
                ngonNgu: ngonNgu.value,
                theLoai: theLoai.value,
                namXB: namXB.value,
            },
            success: function (result) {
                // Xử lý dữ liệu JSON và cập nhật nội dung trang
                console.log("Phản hồi từ server:", result);
                console.log("sachList:", result.sachList);

                if (result.success) {
                    UpdateView(result.sachList);
                } else {
                    alert(result.message);
                }
            },
            error: function (result) {
                console.log("Lỗi khi gửi yêu cầu AJAX:", result);
            }
        });
    }

    function validateInput(event, maxQuantity) {
        // Ngăn chặn nhập ký tự không phải số
        if (!isNumericInput(event)) {
            event.preventDefault();
        }
        // Ngăn chặn nhập 'e' hoặc 'E'
        if (event.key === 'e' || event.key === 'E') {
            event.preventDefault();
        }
        // Kiểm tra giá trị sau khi nhập để đảm bảo nó nằm trong phạm vi cho phép
        let inputValue = event.target.value + event.key;
        if (inputValue < 0 || inputValue > maxQuantity) {
            event.preventDefault();
        }
    }

    function isNumericInput(event) {
        const key = event.key;
        // Chỉ cho phép các phím số từ '0' đến '2', phím Backspace, Delete và các phím mũi tên
        return (key >= '0' && key <= '2') || key === 'Backspace' || key === 'Delete' || key === 'ArrowLeft' || key === 'ArrowRight';
    }
        /////////////////////// Đăng ký mượn sách /////////////////////////////
    function ThueSach(maSach, tenSach) {
        // Lưu mã sách vào biến toàn cục để sử dụng sau này
        selectedMaSach = maSach;

        // Hiển thị giá trị của maSach trong modal
        $('#maSachDisplay').text('Thêm giỏ hàng sách: ' + tenSach);

        // Hiển thị modal
        $('#dangKyDialog').modal('show');
    }

    // function XoaDuLieuCu() {
    //     localStorage.removeItem('gioHang'); // Xóa chỉ mục 'gioHang'
    //     console.log("Dữ liệu cũ trong localStorage đã được xóa.");
    // }
    //     XoaDuLieuCu();
    var currentUserPhone = '@User.FindFirst("PhoneNumber")?.Value';
    function ThemVaoGioHang() {
        var currentUserId = currentUserPhone;
        if (!currentUserId) {
            console.error("Không tìm thấy số điện thoại người dùng.");
            document.getElementById("contentModalError").innerHTML = "Vui lòng đăng nhập để thêm vào giỏ hàng!";
            $("#ModalError").modal("show");
            return;
        }
        var soLuongMuon = parseInt($('#soLuong').val());
        var soLuongSachHienTai = parseInt($('#soLuongSach_' + selectedMaSach).text());

        if (!isNaN(soLuongMuon) && !isNaN(soLuongSachHienTai) && (soLuongMuon <= (soLuongSachHienTai - 5))) {
            if (soLuongMuon < 1) {
                document.getElementById("contentModalError").innerHTML = "Số lượng không phù hợp! Vui lòng kiểm tra lại";
                $("#ModalError").modal("show");
            } else {
                var gioHang = JSON.parse(localStorage.getItem('gioHang')) || [];

                var sachTrongGio = gioHang.find(item => item.maSach === selectedMaSach && item.userId === currentUserId);

                if (sachTrongGio) {
                    var tongSoLuongMuon = sachTrongGio.soLuongMuon + soLuongMuon;

                    if (tongSoLuongMuon > 2) {
                        document.getElementById("contentModalError").innerHTML = "Số lượng mượn sách đã vượt quá giới hạn cho phép (tối đa 2 quyển mỗi sách).";
                        $("#ModalError").modal("show");
                    } else {
                        sachTrongGio.soLuongMuon = tongSoLuongMuon; // Cập nhật số lượng mượn
                        localStorage.setItem('gioHang', JSON.stringify(gioHang));
                        document.getElementById("contentModalSuccess").innerHTML = "Bạn đã thêm giỏ hàng thành công!";
                        $("#ModalSuccess").modal("show");
                        $('#dangKyDialog').modal('hide');
                    }
                } else {
                    if (soLuongMuon > 2) {
                        document.getElementById("contentModalError").innerHTML = "Số lượng mượn sách vượt quá giới hạn cho phép (tối đa 2 quyển mỗi sách).";
                        $("#ModalError").modal("show");
                    } else {
                        gioHang.push({
                            maSach: selectedMaSach,
                            soLuongMuon: soLuongMuon,
                            soLuongSachHienTai: soLuongSachHienTai,
                            userId: currentUserId
                        });
                        localStorage.setItem('gioHang', JSON.stringify(gioHang));
                        document.getElementById("contentModalSuccess").innerHTML = "Bạn đã thêm giỏ hàng thành công!";
                        $("#ModalSuccess").modal("show");
                        $('#dangKyDialog').modal('hide');
                    }
                }
            }
        } else {
            document.getElementById("contentModalError").innerHTML = "Xin lỗi quý khách! Số lượng sách còn lại tại Thư viện đã đạt giới hạn tối thiểu";
            $("#ModalError").modal("show");
        }
    }
   
        </script>
