@{
    ViewBag.Title = "Phiếu Trả";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    table td {
        text-align: center;
        vertical-align: middle;
    }

    .sach-row td {
        padding: 8px;
    }

    #thongTinSachTable .table thead > tr > th:first-of-type {
        padding-left: 0 !important;
    }
 
</style>
<!-- Hiển thị danh sách NhanViens -->
<section class="content">
    <div class="container-fluid pt-4">
        <div class="row">

            <!-- Tạo phiếu trả -->
            <div class="col-7" style="height: 87vh;">
                <div class="card" style="height: 100%;">
                    <div class="card-header">
                        <div class="form-row">
                            <div class="col-7">
                                <h3 class="text-center  text-blue text-bold"> Phiếu trả </h3>
                            </div>
                            <div class="col-3">
                                <button type="button" class="btn btn-primary" onclick="Save();">Tạo phiếu trả</button>
                            </div>
                            <div class="col-2">
                                <button type="button" class="btn btn-warning lamMoiSach" onclick="lamMoi()">Làm mới</button>
                            </div>

                        </div>
                    </div>
                    <div class="card-body" style="overflow-y: auto;">
                        <form>
                            <!--Mã thẻ-->
                            <div class="form-row">
                                <!--Mã nhân viên-->
                                <div class="form-group col">
                                    <label for="selectedMaNhanVien">Mã nhân viên:</label>
                                    <input type="text" class="form-control" id="selectedMaNhanVien" name="selectedMaNhanVien" value=4 readonly /> @* "@User.FindFirst("MaNV")?.Value" readonly>*@
                                </div>
                                <div class="form-group col">
                                    <label for="name">Mã thẻ độc giả:</label>
                                    <input type="text" class="form-control" id="selectedMaThe" name="selectedMaThe" readonly>
                                    <!--Thêm readonly sẽ không cho phép sửa-->
                                </div>
                                <!--Ngày trả-->
                                <div class="form-group col">
                                    <label for="return_date">Ngày trả:</label>
                                    <input type="date" class="form-control" id="return_datetra" name="return_datetra" readonly>
                                </div>
                            </div>

                            <div class="form-row">
                                @* Tên *@
                                <div class="form-group col">
                                    <label for="name">Tên độc giả:</label>
                                    <input type="text" class="form-control" id="selectedName" name="selectedName" readonly>
                                </div>

                                <!--Số điện thoại-->
                                <div class="form-group col">
                                    <label for="book">Số điện thoại:</label>
                                    <input type="text" class="form-control" id="selectedSDT" name="selectedSDT" readonly>
                                </div>
                            </div>
                            <div class="form-row">
                                <!--Ngày mượn-->
                                <div class="form-group col">
                                    <label for="return_date">Ngày mượn:</label>
                                    <input type="date" class="form-control" id="return_datemuon" name="return_datemuon" readonly>
                                </div>

                                <!--hạn trả-->
                                <div class="form-group col">
                                    <label for="return_date">Hạn trả:</label>
                                    <input type="date" class="form-control" id="return_datehan" name="return_datehan" readonly>
                                </div>

                                <div class="form-group col-4">
                                    <label for="tongTienPhuThu">Tổng tiền:</label>
                                    <input type="text" class="form-control" id="tongTienPhuThu" name="tongTienPhuThu" readonly>

                                </div>
                            </div>
                         
                            <!--Body table thông tin sách-->
                            <div class="card-body table-responsive" style="height: 71.2vh;" id="thongTinSachTable">
                                <table class="table table-head-fixed table-hover" style="padding-left: 0;">
                                    <!--text-nowrap-->
                                    <thead>
                                        <tr style="text-align: center">
                                            <th style="padding-left: 0;width: 12%">Mã Sách</th>
                                            <th style="width: 30%">Tên sách</th>
                                            <th style="width: 44%"> Phụ Thu  </th>
                                            <th style="width: 20%">Mã C.sách</th>
                                            <th style="width: 8%"> Trả</th>
                                            <th style="width: 8%"> Lỗi  </th>
                                            <th style="width: 8%"> Mất  </th>
                                        </tr>

                                    </thead>
                                    <tbody id="tableBody">
                                    </tbody>
                                </table>
                            </div>
                          
                            <input id="hdfMaPM" type="hidden" value="0" />
                        </form>
                    </div>
                </div>
            </div>

            <!-- Nút chọn Sách hoặc Thông tin độc giả -->
            <div class="col-5">
                <div class="card" style="height: 100%">
                    <div class="card-header">
                        <h5 id="thongTinPhieuMuonButton" class="btn btn-primary">T.T Phiếu mượn</h5>

                        <div class="card-tools">

                            <div class="input-group input-group-sm pt-2" style="width: 150px">
                              
                            </div>
                        </div>
                    </div>
                    <!--Body table pm-->
                    <div class="card-body table-responsive p-0" style="height: 100%" id="thongTinPhieuMuonTable">
                        <table id="tablephieuMuon" class="table table-head-fixed table-hover  table-bordered">
                            <thead>
                                <tr>
                                    <th>Mã PM</th>
                                    @* <th>Mã thẻ</th> *@
                                    <th>Tên DG</th>
                                    <th>SĐT</th>
                                    <th>Ngày mượn</th>
                                    <th>Hạn trả</th>
                                    <th>Tình trạng</th>
                                </tr>
                            </thead>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>


<!-- Modal error-->
<div class="modal fade" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="ModalError" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-danger">
                <span class="" id="contentModalError"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span class="" id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal hiển thị PDF -->
<div class="modal fade" id="ModalPDF" tabindex="-1" aria-labelledby="ModalPDFLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalPDFLabel">Phieu Tra PDF</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="pdfIframe" src="" width="100%" height="650px"></iframe>
            </div>
        </div>
    </div>
</div>

<!-- Modal confirm -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

 @section scripts
{
    <script>

        function lamMoi() {
            document.getElementById("selectedMaThe").value = "";
            document.getElementById("selectedName").value = "";
            document.getElementById("selectedSDT").value = "";
            document.getElementById("return_datemuon").value = "";
            document.getElementById("return_datehan").value = "";
            document.getElementById("tongTienPhuThu").value = "";
            let tableBody = document.getElementById("tableBody");
            tableBody.innerHTML = "";
            //loadPhieuMuons('');
        }

        $(document).ready(function () {
            init();
        });

        function init() {
            var currentDate = new Date();

            // Format the current date into YYYY-MM-DD string
            var formatCurrentDate = currentDate.toISOString().slice(0, 10);

            // Set the default value for the "return_date" field to the current date
            document.getElementById("return_datetra").value = formatCurrentDate;
            document.getElementById("tongTienPhuThu").value = formatMoney(0);

            $('#tablephieuMuon').DataTable(
            {
                processing: true,
                serverSide: true,
                paging: true,
                searching: true,
                searchDelay: 400,
                scrollY: false,
                iDisplayLength: 5,
                bLengthChange: false,
                language: {
                    info: "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                    lengthMenu: "Hiển thị _MENU_ mục",
                    search: "Tìm kiếm",
                    processing: "Đang tải dữ liệu...",
                    paginate: {
                        previous: "Trước",
                        next: "Tiếp theo",
                        last: "Cuối"
                    }
                },

                ajax: {
                    url: "/admin/phieutra/GetListPhieuMuonPaging_APP",
                    // url: "/phieutra/GetListPhieuMuonPaging_APP",

                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function () {
                        // Optional: Show loading indicator
                    },
                    data: function (data) {
                        var tablephieuMuonA = $("#tablephieuMuon").DataTable();
                        var settings = tablephieuMuonA.settings();
                        var currentPageIndex = Math.ceil(settings[0]._iDisplayStart / settings[0]._iDisplayLength) + 1;
                        var request = {
                            PageSize: 5,
                            Page: currentPageIndex,
                            Keyword: $('.dt-search input[type="search"]').val()
                        };
                        return JSON.stringify(request);
                    },
                    dataSrc: function (res) {
                        if (res.success && res.phieuMuonList != null) {
                            return res.phieuMuonList.results;
                        } else {
                            return [];
                        }
                    },
                    dataFilter: function (data) {
                        var page = $.parseJSON(data);
                        if (!page.success || page.phieuMuonList == null) {
                            page.recordsTotal = 0;
                            page.recordsFiltered = 0;
                            return JSON.stringify(page);
                        }
                        page.recordsTotal = page.phieuMuonList.rowCount || 0;
                        page.recordsFiltered = page.phieuMuonList.rowCount || 0;
                        return JSON.stringify(page);
                    },
                    error: function (status) {
                        // Handle error
                    }
                },
               columns: [
                    { data: "maPM", width: "7%" },
                    { data: "hoTenDG", width: "15%" },
                    { data: "sdt", width: "15%" },
                    { data: "ngayMuon", width: "15%" },
                    { data: "hanTra", width: "15%" },
                    {
                        data: "hanTra",
                        width: "10%",
                        render: function (data, type, row) {
                            var today = new Date();
                            var hanTraDate = new Date(data); // Chuyển `hanTra` thành đối tượng Date
                            if (hanTraDate < today) {
                                return '<span style="color: red;">Hết hạn</span>';
                            } else {
                                return '<span style="color: green;">Còn hạn</span>';
                            }
                        }
                    }
               ],
                columnDefs: [{
                    "defaultContent": "-",
                    "targets": "_all"
                }]
            });
        }
        // Thay thế sự kiện '.btn-see-all' bằng sự kiện click trên mỗi hàng (row)
        $('body').on('click', '#tablephieuMuon tbody tr', function () {
            // Lấy DataTable
            var table = $('#tablephieuMuon').DataTable();

            // Lấy dữ liệu của hàng được click
            var rowData = table.row(this).data();

            // Hiển thị thông tin ngày mượn và hạn trả vào các ô nhập dạng ngày trong form
            document.getElementById("selectedMaThe").value = rowData.maThe;
            console.log(rowData.maThe);
            document.getElementById("selectedName").value = rowData.hoTenDG;
            console.log(rowData.hoTenDG);
            document.getElementById("selectedSDT").value = rowData.sdt;
            document.getElementById("return_datemuon").value = rowData.ngayMuon;
            document.getElementById("return_datehan").value = rowData.hanTra;

            // Lưu mã PM vào input hidden
            document.getElementById("hdfMaPM").value = rowData.maPM;

            // Gọi hàm loadSachMuons với tham số là mã PM
              loadSachMuons(rowData.maPM);
        });

        function loadSachMuons(maPM) {
            $('#hdfMaPM').val(maPM); // Lưu mã phiếu mượn vào hidden input để sử dụng sau

            $.ajax({
                type: "POST",
                url: "/admin/phieutra/GetSachMuon_APP/" + maPM,
                dataType: 'json',
                success: function (res) {
                    console.log("Dữ liệu sách mượn:", res);

                    // Nhóm dữ liệu theo maSach và tenSach
                    const groupedData = new Map();
                    res.forEach(item => {
                        const key = item.maSach + "|" + item.tenSach;
                        if (!groupedData.has(key)) {
                            groupedData.set(key, {
                                maSach: item.maSach,
                                tenSach: item.tenSach,
                                giasach: item.giasach,
                                cuonSachList: [],
                                phuThu: 0 // Mặc định phụ thu là 0
                            });
                        }
                        groupedData.get(key).cuonSachList.push(item.macuonsach);
                    });

                    // Render dữ liệu ra bảng
                    let render = "";
                    groupedData.forEach((value) => {
                        const totalRows = value.cuonSachList.length;

                        value.cuonSachList.forEach((maCuonSach, index) => {
                           
                            // Chỉ thêm cột Mã Sách, Tên Sách và Phụ Thu ở dòng đầu tiên
                            if (index === 0) {
                                render += `<tr id="parent_${value.maSach}" class="sach-row" aria-expanded="false" data-widget="expandable-table" style="text-align: center">`;

                                render += `<td rowspan="${totalRows}" style="vertical-align: middle; text-align: center;">${value.maSach}</td>`;
                                render += `<td rowspan="${totalRows}" style="vertical-align: middle; text-align: center;">${value.tenSach}</td>`;
                                render += `<td rowspan="${totalRows}" style="vertical-align: middle; text-align: center;" class="phuThuGroup" id="phuThuGroup${value.maSach}">0</td>`;
                            } else {
                                render += `<tr id="child_${value.maSach}_${index}" class="sach-row" aria-expanded="false" data-widget="expandable-table" style="text-align: center">`;
                            }

                            // Mã cuốn sách
                            render += `<td style="text-align: center;">${maCuonSach}</td>`;

                             // Các radio buttons cho hành động trả, lỗi, mất
                             const actions = ['tra', 'loi', 'mat'];

                            actions.forEach(action => {
                                render += `<td style="text-align: center;">
                <input type="radio" name="action${maCuonSach}" value="${action}"
                       data-gia-sach="${value.giasach}" data-ma-cuon-sach="${maCuonSach}"
                       data-was-checked="false"
                               onclick="handleCheckboxClick('${maCuonSach}', ${value.maSach}, ${value.giasach});" />
            </td>`;
                            });

                            render += '</tr>';
                        });
                    });

                    // Đưa nội dung render vào bảng
                    let tableBody = document.getElementById("tableBody");
                    tableBody.innerHTML = render;

                    // Reset tổng tiền phụ thu
                    document.getElementById("tongTienPhuThu").value = formatMoney(0);
                },
                error: function (status) {
                    alert("Không tìm thấy dữ liệu sách mượn");
                }
            });
        }

        // // Hàm xử lý khi checkbox được chọn
        // function handleCheckboxClick( maCuonSach, maSach, giaSach) {
        //     console.log('Hàm click checkbox: Mã sách:', maSach); // Debug mã sách
        //     console.log('Hàm click checkbox: Mã cuốn sách:', maCuonSach); // Debug mã cuốn sách
        //     console.log('Hàm click checkbox: Giá sách:', giaSach); // Debug giá sách

        //     if (maSach && maCuonSach && giaSach) {
        //         PhuThu(maCuonSach, maSach, giaSach); // Tính phụ thu
        //         updateTongTien(); // Cập nhật tổng tiền
        //     } else {
        //         console.error("Không thể xác định mã sách, mã cuốn sách hoặc giá sách");
        //     }
        // }

        function handleCheckboxClick(maCuonSach, maSach, giaSach) {
            console.log('Hàm click checkbox: Mã sách:', maSach);
            console.log('Hàm click checkbox: Mã cuốn sách:', maCuonSach);
            console.log('Hàm click checkbox: Giá sách:', giaSach);

            // Tìm radio hiện tại
            const currentRadio = $(`input[name="action${maCuonSach}"]`).filter(":checked");
            console.log("Radio hiện tại:", currentRadio);

            // Kiểm tra trạng thái "wasChecked"
            let isAlreadyChecked = $(currentRadio).data('wasChecked') || false;
            console.log("Trạng thái wasChecked trước:", isAlreadyChecked);

            if (isAlreadyChecked) {
                // Nếu radio đã được chọn và người dùng nhấp lại, hủy chọn radio
                $(currentRadio).prop('checked', false).data('wasChecked', false);
                console.log('Radio bị bỏ chọn:', maCuonSach);

                PhuThu(maCuonSach, maSach, giaSach); // Tính phụ thu
                updateTongTien(); // Cập nhật tổng tiền
                
            } else {
                // Nếu radio chưa được chọn, đánh dấu là đã chọn
                $(`input[name="action${maCuonSach}"]`).data('wasChecked', false); // Đặt tất cả radio trong nhóm thành false
                $(currentRadio).data('wasChecked', true); // Chỉ đánh dấu radio hiện tại là true

                console.log('Radio được chọn:', maCuonSach);

                // Tính phụ thu
                if (maSach && maCuonSach && giaSach) {
                    PhuThu(maCuonSach, maSach, giaSach); // Tính phụ thu
                    updateTongTien(); // Cập nhật tổng tiền
                } else {
                    console.error("Không thể xác định mã sách, mã cuốn sách hoặc giá sách");
                }
            }

            console.log("Trạng thái wasChecked sau:", $(currentRadio).data('wasChecked'));
        }


        // Biến lưu phụ thu của từng mã cuốn sách (được lưu theo mã sách và mã cuốn sách)
        const phuThuDetails = {};

        function PhuThu(maCuonSach, maSach, giaSach) {
            console.log('Hàm phụ thu: Mã sách:', maSach);
            console.log('Hàm phụ thu: Mã cuốn sách:', maCuonSach);
            console.log('Hàm phụ thu: Giá sách:', giaSach);

            // Tìm checkbox đã được chọn
            const radioButton = $(`input[name="action${maCuonSach}"]:checked`);

            if (radioButton.length > 0) {
                const NgayTra = document.getElementById("return_datetra").value;
                const HanTra = document.getElementById("return_datehan").value;

                // Tính số ngày chênh lệch
                const soNgayChenhLech = Math.max(0, (new Date(NgayTra) - new Date(HanTra)) / (1000 * 60 * 60 * 24));
                const value = radioButton.val();

                // Tính phụ thu cho cuốn sách hiện tại
                let phuThuCuonSach = 0;

                if (value === "tra") {
                    phuThuCuonSach += soNgayChenhLech * 3000; // Phụ thu trễ hạn cho "Trả"
                } else if (value === "loi") {
                    phuThuCuonSach += (giaSach * 0.5); // Phụ thu 50% giá sách cho "Lỗi"
                    phuThuCuonSach += soNgayChenhLech * 3000; // Phụ thu trễ hạn cho "Lỗi"
                } else if (value === "mat") {
                    phuThuCuonSach += giaSach; // Giá sách đầy đủ cho "Mất"
                    phuThuCuonSach += soNgayChenhLech * 3000; // Phụ thu trễ hạn cho "Mất"
                }

                // Cập nhật phụ thu vào `phuThuDetails`
                if (!phuThuDetails[maSach]) {
                    phuThuDetails[maSach] = {};
                }

                // Cập nhật phụ thu của cuốn sách
                phuThuDetails[maSach][maCuonSach] = phuThuCuonSach;

                console.log(`Phụ thu cập nhật cho cuốn sách ${maCuonSach}:`, phuThuCuonSach);

            } else {
                // Trường hợp không có radio được chọn (radio bị hủy)
                console.log(`Radio bị hủy chọn: ${maCuonSach}`);

                if (phuThuDetails[maSach] && phuThuDetails[maSach][maCuonSach]) {
                    // Xóa phụ thu của cuốn sách
                    delete phuThuDetails[maSach][maCuonSach];
                    console.log(`Xóa phụ thu cho cuốn sách ${maCuonSach}`);

                    // Nếu không còn cuốn sách nào trong mã sách, xóa luôn nhóm mã sách
                    if (Object.keys(phuThuDetails[maSach]).length === 0) {
                        delete phuThuDetails[maSach];
                        console.log(`Xóa toàn bộ phụ thu cho mã sách ${maSach}`);
                    }
                }
            }

            // Cập nhật tổng phụ thu của mã sách
            const totalPhuThu = phuThuDetails[maSach]
                ? Object.values(phuThuDetails[maSach]).reduce((sum, value) => sum + value, 0)
                : 0;

            // Hiển thị tổng phụ thu mới
            document.getElementById(`phuThuGroup${maSach}`).innerHTML = formatMoney(totalPhuThu);

            console.log(`Tổng phụ thu cho mã sách ${maSach}:`, totalPhuThu);
        }


        // Hàm cập nhật tổng tiền
        function updateTongTien() {
            let tongTienPhuThu = 0;

            // Lấy danh sách tất cả các cột phụ thu theo mã sách
            const phuThuGroups = document.querySelectorAll('.phuThuGroup');

            // Cộng dồn tất cả các giá trị phụ thu
            phuThuGroups.forEach(function (group) {
                const phuThuValue = group.textContent;

                // Chuyển giá trị phụ thu thành số
                const numericValue = parseFloat(phuThuValue.replace(/[^\d]/g, '')); // Loại bỏ ký tự không phải số

                if (!isNaN(numericValue)) {
                    tongTienPhuThu += numericValue;
                }
            });

            // Hiển thị tổng tiền phụ thu
            document.getElementById("tongTienPhuThu").value = formatMoney(tongTienPhuThu);
        }

        // Hàm định dạng tiền
        function formatMoney(number) {
            return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
        }

        function createSachTraPostData() {
            var sachTraList = [];
           // var ctSachTraList = [];

            // Lưu trữ trạng thái của từng mã sách
            var sachGroupMap = {};

            // Lấy tất cả các hàng sách từ bảng
            var sachRows = document.querySelectorAll(".sach-row");

            sachRows.forEach(function (row) {

                var idRow = row.id;
                var maSach = "";
                var tenSach = "";
                var maCuonSach = "";

               
                // ở đây check nếu dòng parent (dòng đầu tiên merge colum)
                if (idRow.includes('parent_'))
                {
                    maSach = row.querySelector('td:nth-child(1)').textContent.trim();
                    tenSach = row.querySelector('td:nth-child(2)').textContent.trim();
                    maCuonSach = row.querySelector('td:nth-child(4)').textContent.trim();
                }
                else{
                    // nếu dòng con bị gộp, thì lấy id thằng parent để lấy thông tin mã sách tên sách
                    var arrId = idRow.split("_"); // vì khi lưu là parent_masach
                    var rowParent = document.getElementById("parent_" + arrId[1]);
                    maSach = rowParent.querySelector('td:nth-child(1)').textContent.trim(); //  2 thông tin sách và ma sách lại nằm row parent (do các dòng child bị merge column)
                    tenSach = rowParent.querySelector('td:nth-child(2)').textContent.trim(); //
                    maCuonSach = row.querySelector('td:nth-child(1)').textContent.trim(); // nên chỗ này vị trí chỉ là 1
                }

                // Kiểm tra radio button nào được chọn
                var radioTra = row.querySelector('input[type="radio"][value="tra"]:checked') ? 1 : 0;
                var radioLoi = row.querySelector('input[type="radio"][value="loi"]:checked') ? 1 : 0;
                var radioMat = row.querySelector('input[type="radio"][value="mat"]:checked') ? 1 : 0;

                // Nếu không có radio nào được chọn, bỏ qua sách này
                if (radioTra === 0 && radioLoi === 0 && radioMat === 0) {
                    return;
                }

                // Lấy giá trị Phụ Thu từ phần tử
                var phuThuElement = row.querySelector('.phuThuGroup');
                var phuThu = 0;  // Giá trị mặc định là 0 nếu không tìm thấy phần tử

                if (phuThuElement) {
                    // Loại bỏ dấu phân cách hàng nghìn (.)
                    var rawValue = phuThuElement.textContent.trim().replace(/\./g, '');
                    phuThu = parseFloat(rawValue) || 0;
                }
                // Kiểm tra nếu đã có mã sách trong nhóm, nếu có thì cộng dồn tình trạng (không tính lại phụ thu)
                if (!sachGroupMap[maSach]) {
                    sachGroupMap[maSach] = {
                        TenSach: tenSach,
                        PhuThu: phuThu || 0,  // Không tính lại, chỉ lấy giá trị đã có
                        SoLuongTra: 0,
                        SoLuongLoi: 0,
                        SoLuongMat: 0,
                        MaSach: maSach,
                        ListCTSachTra: [] // Thêm danh sách chi tiết vào đây
                    };
                }

                // Cộng dồn số lượng tình trạng (trả, lỗi, mất)
                sachGroupMap[maSach].SoLuongTra += radioTra;
                sachGroupMap[maSach].SoLuongLoi += radioLoi;
                sachGroupMap[maSach].SoLuongMat += radioMat;

                // Thêm chi tiết sách vào danh sách CT_Sach_Tra
                var tinhTrang = radioTra ? 1 : radioLoi ? 2 : radioMat ? 3 : 0;
                sachGroupMap[maSach].ListCTSachTra.push({
                    MaCuonSach: maCuonSach,
                    Tinhtrang: tinhTrang
                });
            });

            // Chuyển sachGroupMap thành danh sách sachTraList
            for (var maSach in sachGroupMap) {
                if (sachGroupMap.hasOwnProperty(maSach)) {
                    sachTraList.push(sachGroupMap[maSach]);
                }
            }

            // Tạo đối tượng tổng DTO_Tao_Phieu_Tra
            var data = {
                MaNhanVien: parseInt(document.getElementById("selectedMaNhanVien").value),
                MaTheDocGia: parseInt(document.getElementById("selectedMaThe").value),
                TenDG: document.getElementById("selectedName").value,
                NgayMuon: null, // Cần bổ sung nếu có
                HanTra: null, // Cần bổ sung nếu có
                NgayTra: document.getElementById("return_datetra").value,  // Đảm bảo có giá trị ngày trả
                ListSachTra: sachTraList,
               // ListCTSachTra: ctSachTraList,
                MaPhieuMuon: parseInt($('#hdfMaPM').val()),
                PhuThu: sachTraList.reduce((sum, s) => sum + s.PhuThu, 0) // Giữ lại phụ thu đã tính trước
            };

            return data;
        }
        function Save() {
            // Lấy dữ liệu từ hàm tạo dữ liệu
            var dataPost = createSachTraPostData();

            // Kiểm tra nếu không có sách nào được chọn
            if (!dataPost.ListSachTra.length) {
                document.getElementById("contentModalError").innerHTML = "Hãy chọn sách để trả!";
                $("#ModalError").modal("show");
                return;
            }
            console.log(dataPost);
            // Hỏi người dùng có chắc chắn muốn tạo phiếu trả không
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn tạo phiếu trả không?";
            const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
            modal.show();

            // Lắng nghe sự kiện xác nhận
            const confirmButton = document.getElementById("confirmButton");
            confirmButton.onclick = function () {
                modal.hide(); // Ẩn modal

                // Gửi yêu cầu Ajax
                $.ajax({
                    type: "POST",
                    url: "/Admin/PhieuTra/TaoPhieuTra_APP",  // Đảm bảo URL đúng
                    data: JSON.stringify(dataPost),  // Dữ liệu gửi đi
                    contentType: "application/json; charset=utf-8",  // Đảm bảo content type là application/json
                    dataType: "json",  // Dự đoán định dạng phản hồi JSON
                    success: function (response) {
                        // Kiểm tra nếu phản hồi thành công
                        if (response.success) {
                            document.getElementById("contentModalSuccess").innerHTML = "Thêm phiếu trả thành công!";
                            $('#tablephieuMuon').DataTable().ajax.reload();  // Làm mới bảng dữ liệu
                            $("#ModalSuccess").modal("show");  // Hiển thị modal thành công
                            lamMoi();  // Làm mới lại nếu cần
                            // Lấy dữ liệu PDF Base64 từ phản hồi
                            var pdfBase64 = response.pdfBase64;

                            if (pdfBase64) {
                                // Chuyển Base64 thành Blob
                                var byteCharacters = atob(pdfBase64);
                                var byteNumbers = new Array(byteCharacters.length).fill(null).map((_, i) => byteCharacters.charCodeAt(i));
                                var byteArray = new Uint8Array(byteNumbers);
                                var blob = new Blob([byteArray], { type: 'application/pdf' });

                                // Tạo URL Blob
                                var url = URL.createObjectURL(blob);

                                // Cập nhật nội dung iframe trong modal
                                var iframe = document.getElementById("pdfIframe"); // Đảm bảo HTML có iframe với id="pdfIframe"
                                iframe.src = url; // Đặt URL file PDF vào iframe

                                // Hiển thị modal chứa PDF
                                $('#ModalPDF').modal('show'); // Hiển thị modal chứa iframe với PDF
                            } else {
                                // Nếu không có dữ liệu Base64
                                document.getElementById("contentModalError").innerHTML = "Không có file PDF được trả về!";
                                $("#ModalError").modal("show");
                            }
                        } else {
                            // Hiển thị thông báo lỗi nếu không thành công
                            document.getElementById("contentModalError").innerHTML = response.message || "Có lỗi xảy ra khi tạo phiếu trả!";
                            $("#ModalError").modal("show");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi khi gửi yêu cầu đến máy chủ:", error);
                        console.error("Chi tiết phản hồi:", xhr.responseText);

                        var errorMessage = "Lỗi không xác định!";
                        if (xhr.responseText) {
                            try {
                                var response = JSON.parse(xhr.responseText); // Nếu phản hồi từ máy chủ có thể là JSON
                                errorMessage = response.message || "Có lỗi xảy ra khi tạo phiếu trả!";
                            } catch (e) {
                                errorMessage = "Có lỗi xảy ra khi xử lý dữ liệu từ máy chủ!";
                            }
                        }

                        document.getElementById("contentModalError").innerHTML = errorMessage;
                        $("#ModalError").modal("show");

                        alert("Lỗi khi gửi yêu cầu đến máy chủ. Vui lòng kiểm tra console để biết thêm chi tiết.");
                    }

                });
            };
        }


    </script>
} 
 @*// // Sau khi tạo phiếu trả thành công, gọi hàm GeneratePhieuTraAPP để tải file PDF
                            // $.ajax({
                            //     url: "/Admin/PhieuTra/GeneratePhieuTraAPP",  // Đảm bảo URL đúng
                            //     type: 'GET',
                            //     data: { mapt: mapt },  // Gửi mapt vào URL query parameters
                            //     xhrFields: {
                            //         responseType: 'blob' // Để nhận phản hồi là file Blob
                            //     },
                            //     success: function (data, status, xhr) {
                            //         // Lấy tên file từ header Content-Disposition
                            //         var disposition = xhr.getResponseHeader('Content-Disposition');
                            //         var fileName = "HoaDonPhieuTra.pdf"; // Tên mặc định
                            //         if (disposition && disposition.indexOf('attachment') !== -1) {
                            //             var matches = /filename="([^"]*)"/.exec(disposition);
                            //             if (matches != null && matches[1]) {
                            //                 fileName = matches[1];
                            //             }
                            //         }

                            //         // Tải file về trình duyệt
                            //         var blob = new Blob([data], { type: 'application/pdf' });
                            //         var url = window.URL.createObjectURL(blob);
                            //         var a = document.createElement('a');
                            //         a.style.display = 'none';
                            //         a.href = url;
                            //         a.download = fileName;
                            //         document.body.appendChild(a);
                            //         a.click();
                            //         window.URL.revokeObjectURL(url);
                            //     },
                            //     error: function (xhr, status, error) {
                            //         console.log("Lỗi tải file: ", error);
                            //     }
                            // });*@