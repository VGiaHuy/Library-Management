@{
    ViewBag.Title = "Phiếu Thanh Lý";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    /* Giới hạn chiều rộng modal */
    .modal-dialog {
        max-width: 700px; /* Giảm chiều rộng modal */
    }

    /* Tạo bảng cuộn với ô có chiều rộng nhỏ hơn */
    .table-scroll {
        max-height: 300px; /* Giới hạn chiều cao bảng */
        overflow-y: auto;
    }

        /* Màu nền khi cell được chọn */
        .table tbody td.selected {
            background-color: #f0ad4e; /* Màu nền khi được chọn */
            color: white;
        }

    /* Căn giữa nội dung trong ô */
    .table tbody td {
        vertical-align: middle;
    }
</style>




<section class="content">
    <div class="container-fluid pt-4">
        <div class="row">
            <!-- kho sách và thông tin đơn vị thanh lý -->
            <div class="col-6" style="height: 80vh;">
                <div class="card" style="height: 100%;">
                    <div class="card-header">
                        <div class="form-row">
                            <div class="col-6">
                                <h3 class="text-center text-blue text-bold"> Phiếu Thanh Lý </h3>
                            </div>
                            <div class="col-3">
                                <button type="submit" class="btn btn-primary taoPhieuTL" id="taoPhieuTL" onclick="taoPhieuTL()">Tạo phiếu TL</button>
                            </div>
                            <div class="col-3">
                                <button type="button" class="btn btn-warning lamMoiSach" onclick="lamMoi()">Làm mới</button>
                            </div>
                        </div>
                    </div>

                    <div class="card-body" style="overflow-y: auto;">
                        <form>
                            <div class="form-row">
                                <!--Mã DV-->
                                <div class="form-group col">
                                    <label for="name">Mã đơn vị:</label>
                                    <input type="text" class="form-control" id="MaDV" name="MaDV" readonly>
                                    <!--Thêm readonly sẽ không cho phép sửa-->
                                </div>

                                <!--Mã nhân viên-->
                                <div class="form-group col">
                                    <label for="MaNhanVien">Mã nhân viên:</label>
                                    <input type="text" class="form-control" id="MaNhanVien" name="MaNhanVien" value="@User.FindFirst("MaNV")?.Value" readonly>
                                </div>
                            </div>

                            <div class="form-row">
                                <!--Tên ĐƠN VỊ-->
                                <div class="form-group col">
                                    <label for="name">Tên đơn vị:</label>
                                    <input type="text" class="form-control" id="Name" name="Name" readonly>
                                </div>

                                <!-- Số điện thoại-->
                                <div class="form-group col">
                                    <label for="book">Số điện thoại:</label>
                                    <input type="text" class="form-control" id="SDT" name="SDT" readonly>
                                </div>
                            </div>
                            <div class="form-row">

                                <div class="form-group col">
                                    <label for="book">Địa chỉ:</label>
                                    <input type="text" class="form-control" id="DiaChi" name="DiaChi" readonly>
                                </div>


                            </div>
                            <div class="form-row">

                                <!--Ngày thanh lý-->
                                <div class="form-group col">
                                    <label for="NgayTL">Ngày thanh lý:</label>
                                    <input type="date" class="form-control" id="NgayTL" name="NgayTL" readonly>
                                </div>
                                <div class="form-group col-4">
                                    <label for="tongTienPhuThu">Tổng tiền:</label>
                                    <input type="text" class="form-control" id="tongTienPhuThu" name="tongTienPhuThu" readonly>

                                </div>

                            </div>


                            <!--Danh sách sách thanh lý-->
                            <div class="text-center">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Mã</th>
                                            <th>Tên sách</th>
                                            <th>S/Lượng</th>
                                            <th>Giá sách</th>
                                            <th>Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody id="danhSachSachTL">
                                    </tbody>
                                </table>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- ĐƠN VỊ VÀ SÁCH TL -->
            <div class="col-6">
                <div class="card">
                    @* <div class="card-header" style="height: 50px; display: flex; justify-content: flex-end; align-items: center;">
                    </div> *@
                    <div class="card-header" style="height: 60px;">
                        <button id="thongTinDonViButton" class="btn btn-primary" onclick="changeTableShow(thongTinDonViTable, thongTinSachTable, thongTinSachNhapKho)" style=" margin-right: 20px;  margin-left: 20px;">
                            Thông tin đơn vị
                        </button>
                        <button id="thongTinSachTLButton" class="btn btn-primary" onclick="changeTableShow(thongTinSachTable, thongTinDonViTable,thongTinSachNhapKho)" style=" margin-right: 20px;">
                            Thông tin sách
                        </button>
                        <!-- Adjust the height as needed -->
                        <button id="themDVButton" class="btn btn-secondary" onclick="btnShowModalThemDV()" style="height: 100%; font-size: 15px; margin-right: 20px; ">
                            Thêm Đơn vị
                        </button>
                        <button id="ThemKhoTLButton" class="btn btn-secondary" onclick="changeTableShow(thongTinSachNhapKho,thongTinDonViTable, thongTinSachTable)" style="height: 100%; font-size: 15px; margin-right: 20px; ">
                            Nhập Kho
                        </button>
                    </div>
                    <!--Body table ĐƠN VỊ-->
                    <div class="card-body table-responsive p-0"
                         style="height: 71.2vh" id="thongTinDonViTable">
                        <table id="tableDVTL" class="table table-head-fixed table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th>Mã ĐV</th>
                                    <th>Tên ĐV</th>
                                    <th>SDT</th>
                                    <th>Địa chỉ</th>
                                </tr>
                            </thead>

                        </table>
                    </div>

                    <!--Body table thông tin sách-->
                    <div class="card-body table-responsive p-0"
                         style="height: 71.2vh; display: none;" id="thongTinSachTable">
                        <table id="tableSachTL" class="table table-head-fixed table-hover table-bordered">
                            <!--text-nowrap-->
                            <thead>
                                <tr>
                                    <th>Mã </th>
                                    <th>Tên sách</th>
                                    <th>S/l kho</th>
                                    <th>Giá</th>
                                    @* <th>S/l Tl</th> *@
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                        </table>
                    </div>

                    <div class="card-body table-responsive p-0"
                         style="height: 71.2vh; display: none;" id="thongTinSachNhapKho">
                        <table id="tableSachNhapKho" class="table table-head-fixed table-hover table-bordered">
                            <!--text-nowrap-->
                            <thead>
                                <tr>
                                    <th>Mã </th>
                                    <th>Tên sách</th>
                                    <th>S/l Hiện tại</th>
                                    <th>Thao tác</th>
                                </tr>

                            </thead>

                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</section>
<!-- Modal Thêm đơn vị-->
<div class="modal fade" id="ThemDVModal" tabindex="-1" role="dialog" aria-labelledby="ThemDVModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-primary col-8" style="font-weight:bold;">Thêm đơn vị thanh lý mới</h4>
                <div class="col-3">
                    <button type="button" class="btn btn-warning lamMoiSach" id="lamMoiButtonModal" onclick="lamMoiDVInsert()">Làm mới</button>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label class="col-form-label">Tên Đơn vị TL:</label>
                        <input type="text" class="form-control" id="TenDVModal">
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Số điện thoại:</label>
                        <input type="text" class="form-control" id="SdtDVModal" onkeydown="validateInput(event, SdtDVModal)">
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">Địa chỉ:</label>
                        <input type="text" class="form-control" id="DiaChiDVModal">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="btnThemDV()">Thêm</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thêm sách-->
<div class="modal fade" id="ThemKhoTLModal" tabindex="-1" aria-labelledby="ThemKhoTLModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ThemKhoTLModalLabel">Thêm kho thanh lý</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formKhoThanhLy">
                    <div class="mb-3">
                        <label for="MasachThanhLyModal" class="form-label">Mã sách TL:</label>
                        <input type="text" class="form-control" id="MasachThanhLyModal" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="tenSachThanhLyModal" class="form-label">Tên sách Thanh lý:</label>
                        <input type="text" class="form-control" id="tenSachThanhLyModal" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="soluongHienTaiSachThanhLyModal" class="form-label">Số lượng hiện tại:</label>
                        <input type="text" class="form-control" id="soluongHienTaiSachThanhLyModal" readonly>
                    </div>
                    <div>
                        <label class="form-label">Chi tiết sách nhập kho:</label>
                        <div class="table-scroll">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                      
                                    </tr>
                                </thead>
                                <tbody id="chiTietSachNhapKhoBody">
                                    <!-- Dữ liệu sẽ được thêm tại đây -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" id="btnLamMoi">Làm mới</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="btnThemKhoTL()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thông Báo -->
<div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-warning text-white">
                <span id="notificationMessage"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal error-->
<div class="modal fade" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="ModalError" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-danger">
                <span class="" id="contentModalError"></span>
            </div>
        </div>
    </div>
</div>
<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span class="" id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>
<!-- Modal confirm -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var thongTinSachTableDatas = [];
        var sachValues = [];
        $(document).ready(function () {
            init();
        });
        //khong cho nhap chu
        function validateInput(event, maxQuantity) {
            // Prevent input of non-numeric characters
            if (!isNumericInput(event)) {
                event.preventDefault();
            }
            // Prevent input of 'e' or 'E'
            if (event.key === 'e' || event.key === 'E') {
                event.preventDefault();
            }
            // Ensure the input is within the allowed range (0 to maxQuantity)
            let inputValue = event.target.value;
            if (inputValue < 0 || inputValue > maxQuantity) {
                event.preventDefault();
            }
        }
        function isNumericInput(event) {
            const key = event.key;
            return (key >= '0' && key <= '9') || key === 'Backspace' || key === 'Delete' || key === 'ArrowLeft' || key === 'ArrowRight';
        }
        function init() {
            // Lấy ngày hiện tại
            var currentDate = new Date();

            // Định dạng ngày hiện tại thành chuỗi YYYY-MM-DD
            var formatCurrentDate = currentDate.toISOString().slice(0, 10);

            // Set ngày mượn là ngày hiện tại
            document.getElementById("NgayTL").value = formatCurrentDate;
            document.getElementById("tongTienPhuThu").value = "0";

            // Mặc định chọn nút "Thông tin đơn vị"
            changeTableShow(thongTinDonViTable, thongTinSachTable, thongTinSachNhapKho);
            // loadDVTLs();
        }
        function lamMoi() {
            document.getElementById("MaDV").value = "";
            document.getElementById("Name").value = "";
            document.getElementById("SDT").value = "";
            document.getElementById("DiaChi").value = "";
            document.getElementById("tongTienPhuThu").value = "0";
            sachValues = [];
            let danhSachSachTL = document.getElementById("danhSachSachTL");
            danhSachSachTL.innerHTML = "";
            changeTableShow(thongTinDonViTable, thongTinSachTable, thongTinSachNhapKho);
        }
        function lamMoiDVInsert() {
            document.getElementById("TenDVModal").value = "";
            document.getElementById("SdtDVModal").value = "";
            document.getElementById("DiaChiDVModal").value = "";

        }
        // function lamMoiKhoTLInsert() {
        //   //  document.getElementById("SoluongModal").value = "";

        // }
        function changeTableShow(tableToShow, tableToHide, tableToHide2) {


            tableToShow.style.display = "block";
            tableToHide.style.display = "none";
            tableToHide2.style.display = "none";

            if (thongTinSachTable.style.display == "block" && thongTinDonViTable.style.display == "none" && thongTinSachNhapKho.style.display == 'none') {
                loadKhoTLs();
            }
            if (thongTinDonViTable.style.display == "block" && thongTinSachTable.style.display == "none" && thongTinSachNhapKho.style.display == 'none') {
                loadDVTLs();
            }

            if (thongTinSachNhapKho.style.display == "block" && thongTinSachTable.style.display == "none"
                && thongTinDonViTable.style.display == 'none') {
                loadSachNhaps();
            }
        }
        //===================== Hàm show don vi thanh ly =====================
        function loadDVTLs() {
            if ($.fn.DataTable.isDataTable('#tableDVTL')) {
                $('#tableDVTL').DataTable().clear().destroy();
            }
            $('#tableDVTL').DataTable(
                {
                    processing: true,
                    serverSide: true,
                    paging: true,
                    searching: true,
                    searchDelay: 700,
                    scrollY: false,
                    iDisplayLength: 5,
                    bLengthChange: false,
                    language: {
                        info: "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                        lengthMenu: "Hiển thị _MENU_ mục",
                        search: "Tìm kiếm",
                        processing: "Đang tải dữ liệu...",
                        paginate: {
                            previous: "Trước",
                            next: "Tiếp theo",
                            last: "Cuối"
                        }
                    },

                    ajax: {
                        url: "/admin/thanhlysach/GetListDonViTLPaging_APP",

                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        beforeSend: function () {
                            // Optional: Show loading indicator
                        },
                        data: function (data) {
                            var tableDVTLA = $("#tableDVTL").DataTable();
                            var settings = tableDVTLA.settings();
                            var currentPageIndex = Math.ceil(settings[0]._iDisplayStart / settings[0]._iDisplayLength) + 1;
                            var request = {
                                PageSize: 5,
                                Page: currentPageIndex,
                                Keyword: $('.dt-search input[type="search"]').val()
                            };
                            return JSON.stringify(request);
                        },
                        dataSrc: function (res) {
                            console.log("ket qua don vi: ", res.donviList);

                            if (res.success && res.donviList != null) {
                                return res.donviList.results;
                            } else {
                                return [];
                            }
                        },
                        dataFilter: function (data) {
                            var page = $.parseJSON(data);
                            if (!page.success || page.donviList == null) {
                                page.recordsTotal = 0;
                                page.recordsFiltered = 0;
                                return JSON.stringify(page);
                            }
                            page.recordsTotal = page.donviList.rowCount || 0;
                            page.recordsFiltered = page.donviList.rowCount || 0;
                            return JSON.stringify(page);
                        },
                        error: function (status) {
                            // Handle error
                        }
                    },
                    columns: [
                        { data: "maDV", width: "15%" },
                        { data: "tenDV", width: "25%" },
                        { data: "sdtdv", width: "25%" },
                        { data: "diaChiDV", width: "35%" },

                    ],
                    columnDefs: [{
                        "defaultContent": "-",
                        "targets": "_all"
                    }]
                });
        }

        $('body').on('click', '#tableDVTL tbody tr', function () {
            // Lấy DataTable
            var table = $('#tableDVTL').DataTable();

            // Lấy dữ liệu của hàng được click
            var rowData = table.row(this).data();
            document.getElementById("MaDV").value = rowData.maDV;

            document.getElementById("Name").value = rowData.tenDV;
            document.getElementById("SDT").value = rowData.sdtdv;
            document.getElementById("DiaChi").value = rowData.diaChiDV;

        });

        //===================== Hàm show sach kho thanh ly =====================
        function loadKhoTLs() {
            if ($.fn.DataTable.isDataTable('#tableSachTL')) {
                $('#tableSachTL').DataTable().clear().destroy();
            }

            $('#tableSachTL').DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                searching: true,
                searchDelay: 700,
                scrollY: false,
                iDisplayLength: 5,
                bLengthChange: false,
                language: {
                    info: "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                    lengthMenu: "Hiển thị _MENU_ mục",
                    search: "Tìm kiếm",
                    processing: "Đang tải dữ liệu...",
                    paginate: {
                        previous: "Trước",
                        next: "Tiếp theo",
                        last: "Cuối"
                    }
                },
                ajax: {
                    url: "/admin/thanhlysach/GetListKhoTLPaging_APP",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function () {
                        // Optional: Show loading indicator
                    },
                    data: function (data) {
                        var tableSachTLA = $("#tableSachTL").DataTable();
                        var settings = tableSachTLA.settings();
                        var currentPageIndex = Math.ceil(settings[0]._iDisplayStart / settings[0]._iDisplayLength) + 1;
                        var request = {
                            PageSize: 5, // Adjusted to match iDisplayLength
                            Page: currentPageIndex,
                            Keyword: $('.dt-search input[type="search"]').val()
                        };
                        return JSON.stringify(request);
                    },
                    dataSrc: function (res) {
                        thongTinSachTableDatas = res.sachList.results;

                        console.log("ket qua sach: ", res.sachList);

                        if (res.success && res.sachList != null) {

                            return checkSoLuong(res.sachList.results);
                        } else {
                            return [];
                        }
                    },
                    dataFilter: function (data) {
                        var page = $.parseJSON(data);
                        if (!page.success || page.sachList == null) {
                            page.recordsTotal = 0;
                            page.recordsFiltered = 0;
                            return JSON.stringify(page);
                        }
                        page.recordsTotal = page.sachList.rowCount || 0;
                        page.recordsFiltered = page.sachList.rowCount || 0;
                        return JSON.stringify(page);
                    },
                    error: function (status) {
                        // Handle error
                    }

                },
                columns: [
                    { data: "maSachKho", width: "15%" },
                    { data: "tenSach", width: "35%" },
                    { data: "soLuongKhoTL", width: "15%" },
                    { data: "giaSachTL", width: "15%" },
                    // { data: null, width: "10%", orderable: false },
                    { data: null, width: "10%", orderable: false }
                ],
                columnDefs: [
                    // {
                    //     targets: 4, // Cột "S/l Tl"
                    //     render: function (data, type, row) {
                    //         return `
                    //             <input class="soLuongInsert" id="soLuongInsert${row.maSachKho}"
                    //                    min="0" max="${row.soLuongKhoTL}" type="number" value="0"
                    //                    style="width: 75%"
                    //                    onkeydown="validateInput(event, ${row.soLuongKhoTL})" /> `;
                    //     }
                    // },
                    {
                        targets: 4, // Cột "Thao tác"
                        render: function (data, type, row) {
                            return `
                                <button class="btn btn-primary"
                                    onclick="themButtonClick(${row.maSachKho}, '${row.tenSach}', ${row.giaSachTL}, ${row.soLuongKhoTL}, event)">
                                    Thêm
                                </button>
                            `;
                        }
                    },
                    {
                        defaultContent: "-",
                        targets: "_all"
                    }
                ]
            });
        }

        //===================== Hàm show modal ddon vi thanh ly =====================
        function btnShowModalThemDV() {
            $("#ThemDVModal").modal("show");
        }
        //===================== Hàm show sach kho sachs =====================
        function loadSachNhaps() {
            if ($.fn.DataTable.isDataTable('#tableSachNhapKho')) {
                $('#tableSachNhapKho').DataTable().clear().destroy();
            }

            $('#tableSachNhapKho').DataTable({
                processing: true,
                serverSide: true,
                paging: true,
                searching: true,
                searchDelay: 700,
                scrollY: false,
                iDisplayLength: 5,
                bLengthChange: false,
                language: {
                    info: "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                    lengthMenu: "Hiển thị _MENU_ mục",
                    search: "Tìm kiếm",
                    processing: "Đang tải dữ liệu...",
                    paginate: {
                        previous: "Trước",
                        next: "Tiếp theo",
                        last: "Cuối"
                    }
                },
                ajax: {
                    url: "/admin/thanhlysach/GetListSachNhapPaging_APP",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: function () {
                        const tableSettings = $("#tableSachNhapKho").DataTable().settings();
                        const currentPageIndex = Math.ceil(tableSettings[0]._iDisplayStart / tableSettings[0]._iDisplayLength) + 1;
                        return JSON.stringify({
                            PageSize: 5,
                            Page: currentPageIndex,
                            Keyword: $('.dt-search input[type="search"]').val()
                        });
                    },
                    dataSrc: function (res) {
                        if (res.success && res.sachList != null) {
                            console.log("Sach nhap kho: ", res.sachList);
                            return res.sachList.results.map(item => ({
                                ...item,
                                listSachNhapKho: item.listSachNhapKho || [] // Đảm bảo mảng không undefined
                            }));
                        } else {
                            return [];
                        }
                    },
                    dataFilter: function (data) {
                        const page = $.parseJSON(data);
                        if (!page.success || page.sachList == null) {
                            page.recordsTotal = 0;
                            page.recordsFiltered = 0;
                        } else {
                            page.recordsTotal = page.sachList.rowCount || 0;
                            page.recordsFiltered = page.sachList.rowCount || 0;
                        }
                        return JSON.stringify(page);
                    },
                    error: function (status) {
                        console.error("Error loading data:", status);
                    }
                },
                columns: [
                    { data: "maSach", width: "15%" },
                    { data: "tenSach", width: "40%" },
                    { data: "soLuongHienTai", width: "20%" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `
                                <button class="btn btn-primary"
                                    onclick="NhapKho(${row.maSach}, '${row.tenSach}', ${row.soLuongHienTai}, '${encodeURIComponent(JSON.stringify(row.listSachNhapKho))}')">
                                    Nhập kho
                                </button>
                            `;
                        },
                        width: "25%"
                    }
                ],
                columnDefs: [
                    { defaultContent: "-", targets: "_all" }
                ]
            });
        }


        //===================== Hàm show modal sach nhap kho ====================
        function NhapKho(maSach, tenSach, soLuongHienTai, listSachNhapKho) {
            let parsedList;
            try {
                parsedList = JSON.parse(decodeURIComponent(listSachNhapKho));
            } catch (error) {
                console.error("Error parsing listSachNhapKho:", error);
                parsedList = [];
            }

            // Cập nhật thông tin cơ bản
            document.getElementById("MasachThanhLyModal").value = maSach;
            document.getElementById("tenSachThanhLyModal").value = tenSach;
            document.getElementById("soluongHienTaiSachThanhLyModal").value = soLuongHienTai;

            // Xử lý bảng chi tiết
            const tableBody = document.getElementById("chiTietSachNhapKhoBody");
            tableBody.innerHTML = "";

            if (parsedList && parsedList.length > 0) {
                let row;
                parsedList.forEach((item, index) => {
                    // Tạo hàng mới mỗi khi đủ 7 cột
                    if (index % 7 === 0) {
                        row = document.createElement("tr");
                        tableBody.appendChild(row);
                    }

                    // Tạo ô dữ liệu
                    const cell = document.createElement("td");
                    cell.textContent = item.maCuonSach || "-";
                    cell.addEventListener("click", function () {
                        // Đổi màu khi click
                        this.classList.toggle("selected");
                    });

                    row.appendChild(cell);
                });
            } else {
                const row = document.createElement("tr");
                row.innerHTML = `<td class="text-center" colspan="5">Không có dữ liệu</td>`;
                tableBody.appendChild(row);
            }

            // Hiển thị modal
            $("#ThemKhoTLModal").modal("show");
        }

        //=====================sach thanh ly=====================
        function themButtonClick(maSach, tenSach, giaSach, soLuongKhoTL, event) {
            event.preventDefault();

            // var soLuongInsert = parseInt(document.getElementById("soLuongInsert" + maSach).value, 10);
            // console.log("so luong insert ", soLuongInsert);

            // // Kiểm tra nếu số lượng nhập vào là 0 hoặc lớn hơn số lượng kho TL thì không thêm vào bảng
            // if (soLuongInsert <= 0 || soLuongInsert > soLuongKhoTL) {
            //     alert("Số lượng không chính xác!.");
            //     return;
            // }

            // Tìm vị trí của sách trong mảng sachValues dựa trên mã sách
            var index = sachValues.findIndex((element) => element.MaSach == maSach);

            if (index === -1) { // Nếu không tìm thấy, thêm sách mới vào mảng
                // Tạo một đối tượng sách mới
                var newSach = {
                    MaSach: maSach,
                    TenSach: tenSach,
                    SoLuong: soLuongKhoTL, // Đảm bảo soLuongInsert là số nguyên
                    GiaSach: giaSach,
                    ThanhTien: giaSach * soLuongKhoTL // Tính tổng giá tiền
                };
                sachValues.push(newSach);
            }
            // else 
            // {
            //     // Chuyển đổi giá trị soLuongInsert sang kiểu số nguyên và cộng dồn
            //     if (parseInt(soLuongInsert) > soLuongKhoTL) {
            //         alert("Vui lòng nhập số lượng nhỏ hơn số lượng còn lại.");
            //         return;
            //     } else {
            //         // Nếu đã tồn tại, cộng dồn số lượng mới vào số lượng hiện có
            //         sachValues[index].SoLuong += soLuongInsert;
            //         sachValues[index].ThanhTien += giaSach * soLuongInsert; // Cập nhật tổng giá tiền
            //     }
            // }
            
            // Gọi hàm thêm sách vào bảngthongTinSachTableDatas co gia tri la
            themSachVaoBang(sachValues, maSach);
            updateTable();
            updateTongTien();
        }

        // results là  data từ server trả về, kiểm tra có trùng mã sách đang nhập ko thì - số lượng đi
        function checkSoLuong(results) {
            //sachValues
            results.forEach((item, index, arr) => {

                // Tìm vị trí của sách trong mảng sachValues dựa trên mã sách
                var indexSachValue = sachValues.findIndex((element) => element.MaSach == item.maSachKho);
                if (indexSachValue !== -1) { 
                    arr[index].soLuongKhoTL -= sachValues[indexSachValue].SoLuong;
                    
                }
            });
            return results;
        }

        // Hàm để cập nhật lại DataTable
        function updateTable() {
            var table = $('#tableSachTL').DataTable();
            table.clear().draw();
            //table.clear().rows.add(thongTinSachTableDatas).draw();
        }

        function themSachVaoBang(sachValue, maSach) {
            // Tìm đến tbody của bảng danh sách sách thanh lý
            let danhSachSachTL = document.getElementById("danhSachSachTL");

            // Xóa tất cả các dòng hiện tại trong bảng
            danhSachSachTL.innerHTML = "";

            // Duyệt qua từng sách trong danh sách
            sachValue.forEach(function (sach) {
                // Tạo một dòng mới trong bảng
                let newRow = danhSachSachTL.insertRow();

                // Thêm các ô (cell) vào dòng mới
                let cellMaSach = newRow.insertCell(0);
                let cellTenSach = newRow.insertCell(1);
                let cellSoLuong = newRow.insertCell(2);
                let cellGiaSach = newRow.insertCell(3);
                let cellThaoTac = newRow.insertCell(4);

                // Gán giá trị cho từng ô
                cellMaSach.innerHTML = sach.MaSach;
                cellTenSach.innerHTML = sach.TenSach;
                cellSoLuong.innerHTML = sach.SoLuong;
                cellGiaSach.innerHTML = sach.GiaSach;

                var btn = document.createElement('input');
                btn.id = "button_delete_" + sach.MaSach;
                btn.type = "button";
                btn.className = "btn btn-danger";
                btn.value = "Xoá";
                cellThaoTac.appendChild(btn);
                btn.addEventListener("click", function () {
                    xoaDong(sach.MaSach);
                }, false);

                // Thêm button vào ô Thao tác
                //cellThaoTac.appendChild(deleteButton);
                // Reset the input field for quantity
                // let inputField = document.getElementById("soLuongInsert" + maSach);
                // inputField.value = 0;
            });
        }

        function xoaDong(MaSach) {
            // Tìm đến tbody của bảng danh sách sách thanh lý
            let danhSachSachTL = document.getElementById("danhSachSachTL");

            // Xóa tất cả các dòng hiện tại trong bảng
            danhSachSachTL.innerHTML = "";
            var indexSachValue = sachValues.findIndex((element) => element.MaSach == MaSach);
            if (indexSachValue !== -1) {
                sachValues.splice(indexSachValue, 1);
            }

            sachValues.forEach(function (sach) {
                // Tạo một dòng mới trong bảng
                let newRow = danhSachSachTL.insertRow();

                // Thêm các ô (cell) vào dòng mới
                let cellMaSach = newRow.insertCell(0);
                let cellTenSach = newRow.insertCell(1);
                let cellSoLuong = newRow.insertCell(2);
                let cellGiaSach = newRow.insertCell(3);
                let cellThaoTac = newRow.insertCell(4);

                // Gán giá trị cho từng ô
                cellMaSach.innerHTML = sach.MaSach;
                cellTenSach.innerHTML = sach.TenSach;
                cellSoLuong.innerHTML = sach.SoLuong;
                cellGiaSach.innerHTML = sach.GiaSach;

                var btn = document.createElement('input');
                btn.type = "button";
                btn.value = "Xoá";
                btn.className = "btn btn-danger";
                btn.addEventListener("click", function () {
                    xoaDong(sach.MaSach);
                }, false);
                cellThaoTac.appendChild(btn);

            });

            updateTable();
            updateTongTien(); 

        }

        function btnThemDV() {
            var tenDv = document.getElementById("TenDVModal").value;
            var sdtDv = document.getElementById("SdtDVModal").value;
            var diaChiDv = document.getElementById("DiaChiDVModal").value;

            var donviValues = {
                TenDv: tenDv,
                Sdtdv: sdtDv,
                DiaChiDv: diaChiDv
            };

            if (!tenDv || !sdtDv || !diaChiDv) {
                document.getElementById("contentModalError").innerHTML = "Thông tin đơn vị không được để trống!";
                $("#ModalError").modal("show");
            } else {
                var phoneRegex = /^\d{10,11}$/;
                if (!phoneRegex.test(sdtDv)) {
                    document.getElementById("contentModalError").innerHTML = "Hãy nhập đúng định dạng số điện thoại!";
                    $("#ModalError").modal("show");
                } else {
                    document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn thêm đơn vị thanh lý không không?";
                    const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
                    modal.show();

                    // Lắng nghe sự kiện xác nhận
                    const confirmButton = document.getElementById("confirmButton");
                    confirmButton.onclick = function () {
                        $.ajax({
                            url: "/admin/thanhlysach/ThemDonViThanhLy_APP",
                            type: 'POST',
                            contentType: "application/json",
                            dataType: "json",
                            data: JSON.stringify(donviValues),
                            success: function (response) {
                                if (response.success) {
                                    document.getElementById("TenDVModal").value = "";
                                    document.getElementById("SdtDVModal").value = "";
                                    document.getElementById("DiaChiDVModal").value = "";

                                    document.getElementById("contentModalSuccess").innerHTML = "Thêm đơn vị thành công";
                                    $("#ModalSuccess").modal("show");
                                    $("#ThemDVModal").modal("hide");
                                    loadDVTLs();
                                    console.log("dv: ", response);
                                    modal.hide(); // Ẩn modal
                                } else {
                                    

                                    document.getElementById("contentModalError").innerHTML = response.message;
                                    $("#ModalError").modal("show");
                                }
                            },
                            error: function () {
                                alert("Lỗi khi gửi yêu cầu đến máy chủ.");
                            }
                        });
                    }
                }
            }
        }

        function btnThemKhoTL() {
            var sachNhapKhoDTO = {
                MaSachKho: document.getElementById("MasachThanhLyModal").value,
                SoLuongKhoTL: 0, // Số lượng sách thanh lý sẽ được tính sau
                listCT_cuonsach: [] // Danh sách các mã cuốn sách được chọn
            };

            var masach = sachNhapKhoDTO.MaSachKho;
            var soluonghientai = document.getElementById("soluongHienTaiSachThanhLyModal").value;

            // Lấy danh sách các mã cuốn sách đã chọn
            var selectedBooks = [];
            var selectedCells = document.querySelectorAll("#chiTietSachNhapKhoBody .selected");

            // Đếm số lượng cuốn sách đã chọn và tạo danh sách các mã cuốn sách
            selectedCells.forEach(function (cell) {
                var maCuonSach = cell.textContent || cell.innerText;
                selectedBooks.push(maCuonSach);
            });

            // Nếu không có sách hoặc không có cuốn sách nào được chọn
            if (!masach || selectedBooks.length === 0) {
                document.getElementById("contentModalError").innerHTML = "Thông tin sách hoặc mã cuốn sách chưa được chọn!";
                $("#ModalError").modal("show");
                return;
            }

            // Cập nhật số lượng sách thanh lý
            sachNhapKhoDTO.SoLuongKhoTL = selectedBooks.length;

            // Tạo danh sách các mã cuốn sách cho DTO
            selectedBooks.forEach(function (maCuonSach) {
                sachNhapKhoDTO.listCT_cuonsach.push({ MaCuonSach: maCuonSach });
            });

            // Kiểm tra nếu số lượng nhập kho không được lớn hơn số lượng hiện tại
            if (sachNhapKhoDTO.SoLuongKhoTL <= parseInt(soluonghientai)) {

                document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn thêm vào kho sách thanh lý không?";
                const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
                modal.show();

                // Lắng nghe sự kiện xác nhận
                const confirmButton = document.getElementById("confirmButton");
                confirmButton.onclick = function () {
               
                    $.ajax({
                        url: "/admin/thanhlysach/ThemSachThanhLy_APP",
                        type: 'POST',
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(sachNhapKhoDTO),
                        success: function (response) {
                            if (response.success) {
                                document.getElementById("MasachThanhLyModal").value = "";
                                // document.getElementById("SoluongModal").value = "";

                                document.getElementById("contentModalSuccess").innerHTML = "Thêm vào kho sách thành công";
                                $("#ModalSuccess").modal("show");
                                $("#ThemKhoTLModal").modal("hide");
                                loadKhoTLs();
                                loadSachNhaps();
                                modal.hide(); // Ẩn modal
                            } else {
                                document.getElementById("contentModalError").innerHTML = "Lỗi khi thêm, Hãy thử lại!";
                                $("#ModalError").modal("show");
                            }
                        },
                        error: function () {
                            alert("Lỗi khi gửi yêu cầu đến máy chủ.");
                        }
                    });
                }
            } else {
                document.getElementById("contentModalError").innerHTML = "Số lượng nhập kho không được lớn hơn số lượng hiện tại!";
                $("#ModalError").modal("show");
            }
        }


        function taoPhieuTL() {
            var maDonVi = document.getElementById("MaDV").value;
            if (maDonVi == "" || maDonVi == 'undefined') {
                $("#notificationMessage").text("Vui lòng chọn Đơn vị.");
                $("#notificationModal").modal("show");
                return;
            }

            if (sachValues == null || sachValues.length == 0) {
                $("#notificationMessage").text("Vui lòng chọn sách thanh lý.");
                $("#notificationModal").modal("show");
                return;
            }

            var dataPost = {
                MaNhanVien: document.getElementById("MaNhanVien").value,
                NgayTL: document.getElementById("NgayTL").value,
                MaDonVi: document.getElementById("MaDV").value,
                listSachTL: sachValues,
            };
            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn tạo phiếu thanh lý không?";
            const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
            modal.show();

            // Lắng nghe sự kiện xác nhận
            const confirmButton = document.getElementById("confirmButton");
            confirmButton.onclick = function () {
                $.ajax({
                    type: "POST",
                    url: "/Admin/ThanhLySach/PhieuThanhLy_APP",
                    data: JSON.stringify(dataPost),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {
                            document.getElementById("contentModalSuccess").innerHTML = "Thêm phiếu thanh lý thành công!";
                            $('#tableSachTL').DataTable().ajax.reload();
                            $("#ModalSuccess").modal("show");
                            sachValues = [];
                            lamMoi();
                            modal.hide(); // Ẩn modal
                            console.log('Tạo phiếu thanh lý: ', response);
                        } else {
                            document.getElementById("contentModalError").innerHTML = "Vui lòng nhập đầy đủ thông tin!";
                            $("#ModalError").modal("show");
                            console.log('Tạo phiếu thanh lý: ', response);
                        }
                    },
                    error: function () {
                        alert("Lỗi khi gửi yêu cầu đến máy chủ.");
                    }
                });
            }

        }


        function updateTongTien() {
            var tongTienPhuThu = 0;

            // Lặp qua từng phần tử trong mảng sachValues và tính tổng tiền
            sachValues.forEach(function (sach) {
                if (!isNaN(sach.ThanhTien)) {
                    tongTienPhuThu += sach.ThanhTien;
                }
            });

            // Hiển thị tổng tiền trong trường "Tổng tiền"
            document.getElementById("tongTienPhuThu").value = formatMoney(tongTienPhuThu);
        }

        // Hàm format tiền
        function formatMoney(number) {
            return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
        }
    </script>
} 

     