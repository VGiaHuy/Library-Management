@{
    ViewBag.Title = "Phiếu Mượn";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="mt-2">
    <h1 class="text-center text-blue text-bold">PHIẾU MƯỢN</h1>
</div>
<div class="row ml-2 d-flex justify-content-between align-items-center">
    <!-- Ô tìm kiếm bên trái -->
    <div class="col-4 d-flex align-items-center" id="SearchPM">
        <input type="text" id="searchInput" class="form-control mb-2" placeholder="Search">
        <button type="button" class="btn btn-default ml-2 mb-2" id="searchButton" onclick="search()">
            <i class="fas fa-search"></i>
        </button>
    </div>
</div>

<div class="card-body table-responsive p-0">
    <form>
        <!--Danh sách sách mượn-->
        <div class="text-center" id="tableThongTinDocGia">
            <table class="table table-hover table-head-fixed table-bordered">
                <thead>
                    <tr>
                        <th>Mã Thẻ</th>
                        <th>Họ tên</th>
                        <th>Giới tính</th>
                        <th>Ngày sinh</th>
                        <th>SDT</th>
                        <th>Địa chỉ</th>
                        <th>Hạn thẻ</th>
                        <th>Lập phiếu mượn</th>
                    </tr>
                </thead>
                <tbody id="ListThongTinĐocGia">
                    @foreach (var item in ViewData["ThongTinDocGia"] as List<WebApp.Areas.Admin.Data.DTO_DocGia_TheDocGia>)
                    {
                        var ngayHetHan = item.NgayHetHan.HasValue ? item.NgayHetHan.Value.ToDateTime(new TimeOnly()) : DateTime.MinValue;
                        var tinhTrangThe = ngayHetHan < DateTime.Now ? "Hết hạn" : "Còn hạn";
                        <tr class="thongtindocgia-row" data-ma-the="@item.MaThe">
                            <td>@item.MaThe</td>
                            <td>@item.HoTenDG</td>
                            <td>@item.GioiTinh</td>
                            <td>@string.Format("{0:MM-dd-yyyy}", item.NgaySinh)</td>
                            <td>@item.SDT</td>
                            <td>@item.DiaChi</td>
                            <td>

                                <span class="badge badge-@(tinhTrangThe == "Hết hạn" ? "danger" : "success")">
                                    @tinhTrangThe
                                </span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" onclick="lapPhieuMuon('@item.MaThe')"
                                @((ngayHetHan < DateTime.Now) ? "disabled" : "")>
                                    Lập phiếu mượn
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>

<!-- Modal Thông Báo -->
<div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-warning text-white">
                <span id="notificationMessage"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal lập phiếu mượn -->
<div class="modal fade bd-example-modal-lg" id="ModalPhieuMuon" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <!-- Header -->
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 text-blue" style="font-weight: bold;" id="">Phiếu mượn</h4>
            </div>

            <!-- Body -->
            <form class="modal-body p-4">
                <div class="form-row">
                    <!--Mã PM-->
                    <div class="form-group col">
                        <label for="name">Mã thẻ độc giả:</label>
                        <input type="text" class="form-control" id="MaTheDG" name="MaTheDG" readonly>
                    </div>
                    <div class="form-group col">
                        <label for="MaNhanVien">Mã nhân viên:</label>
                        <input type="text" class="form-control" id="MaNhanVien" name="MaNhanVien" readonly>
                    </div>
                </div>

                <div class="form-row">
                    <!--Tên độc giả-->
                    <div class="form-group col">
                        <label for="Name">Tên độc giả:</label>
                        <input type="text" class="form-control" id="Name" name="Name" readonly>
                    </div>

                    <!--số điện thoại-->
                    <div class="form-group col">
                        <label for="Name">Số điện thoại:</label>
                        <input type="text" class="form-control" id="SDT" name="SDT" readonly>
                    </div>

                </div>

                <div class="form-row">
                    <!--Ngày mượn-->
                    <div class="form-group col">
                        <label for="NgayMuon">Ngày mượn:</label>
                        <input type="date" class="form-control" id="NgayMuon" name="NgayMuon" readonly>
                    </div>
                    <!--Hạn trả-->
                    <div class="form-group col">
                        <label for="HanTra">Hạn trả:</label>
                        <select class="form-control" id="HanTra" name="HanTra">
                            <option>-- Chọn hạn trả --</option>
                            <option value="1">1 tuần</option>
                            <option value="2">2 tuần</option>
                            <option value="3">3 tuần</option>
                            <option value="4">4 tuần</option>
                        </select>
                    </div>
                </div>

                <!-- Phần thêm nút và ô tìm kiếm -->
                <div class="d-flex justify-content-end mb-3">
                    <!-- Ô tìm kiếm -->
                    <div class="input-group" style="width: 300px;">
                        <input type="text"
                               id="searchSach"
                               class="form-control"
                               placeholder="Tìm kiếm sách...">
                        @*  onclick="themSach()"> *@
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                    </div>

                    <!-- Nút thêm -->
                    <button type="button" class="btn btn-success ml-2" onclick="themSach()">Thêm +</button>
                </div>

                <!--Danh sách sách mượn-->
                <div class="text-center">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Mã sách</th>
                                <th>Mã cuốn sách</th>
                                <th>Tên sách</th>
                                <th>Số lượng</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody id="danhSachSachMuon">
                            <!-- Dữ liệu sẽ được load động -->
                        </tbody>
                    </table>
                </div>
            </form>

            <!-- Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary taophieumuon" onclick="taoPhieuMuon()">Tạo</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal error-->
<div class="modal fade" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="ModalError" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-danger">
                <span class="" id="contentModalError"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span class="" id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal hiển thị PDF -->
<div class="modal fade" id="ModalPDF" tabindex="-1" aria-labelledby="ModalPDFLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalPDFLabel">Phieu Muon PDF</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="pdfIframe" src="" width="100%" height="650px"></iframe>
            </div>
        </div>
    </div>
</div>

<!-- Modal confirm -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="xacNhanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="xacNhanModalLabel">Xác nhận hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="" id="contentModalConfirm"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Đóng </button>
                <button type="button" class="btn btn-primary" id="confirmButton">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>


        function search() {
            // Lấy giá trị từ ô input
            var keyword = document.getElementById("searchInput").value.toLowerCase();

            // Lấy danh sách các hàng trong bảng thongTinDocGiaTable
            var docGiaRows = document.querySelectorAll("#tableThongTinDocGia tbody tr");

            // Duyệt qua từng hàng để kiểm tra từ khóa
            docGiaRows.forEach(function (row) {
                // Lấy nội dung của từng ô trong hàng
                var maThe = row.querySelector("td:nth-child(1)").textContent.toLowerCase();
                var hoTen = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
                var sdt = row.querySelector("td:nth-child(3)").textContent.toLowerCase();
                var diaChi = row.querySelector("td:nth-child(4)").textContent.toLowerCase();

                // Kiểm tra xem từ khóa có xuất hiện trong bất kỳ ô nào hay không
                if (maThe.includes(keyword) || hoTen.includes(keyword) || sdt.includes(keyword) || diaChi.includes(keyword)) {
                    // Hiển thị hàng nếu có từ khóa
                    row.style.display = "table-row";
                } else {
                    // Ẩn hàng nếu không có từ khóa
                    row.style.display = "none";
                }
            });
        }

        function handleKeyPress(event) {
            if (event.key === "Enter") {
                event.preventDefault(); // Ngăn hành động mặc định của phím Enter
                search(); // Gọi hàm tìm kiếm
            }
        }

        // Gắn sự kiện vào ô tìm kiếm và nút search
        document.getElementById("searchInput").addEventListener("keypress", handleKeyPress);
        document.getElementById("searchButton").addEventListener("click", search);


        //=====================  Lập phiếu mượn  =====================
        function lapPhieuMuon(maThe) {
            // Gọi API kiểm tra thông tin phiếu mượn với mã thẻ
            $.ajax({
                url: '@Url.Action("ValidatePhieuMuon", "phieumuon")',
                type: 'POST',
                data: { maThe: maThe },
                success: function (response) {
                    if (response.success) {
                        openModal(maThe);
                        // Mở modal khi thành công
                    } else {
                        $("#notificationMessage").text(response.message);
                        $("#notificationModal").modal("show");
                        //alert(response.message);  // Hiển thị thông báo lỗi khi không thành công
                    }
                },
                error: function () {
                    document.getElementById("contentModalError").innerHTML = "Đã xảy ra lỗi khi kiểm tra phiếu mượn.";
                    $("#ModalError").modal("show");
                }
            });
        }

        //int matheselect  =0;
        function openModal(maThe) {

            // Lấy hàng thông tin độc giả dựa trên `data-ma-the`
            const row = document.querySelector(`tr[data-ma-the="${maThe}"]`);
            if (!row) {
                document.getElementById("contentModalError").innerHTML = 'Không tìm thấy thông tin cho mã thẻ: ' + maThe;
                $("#ModalError").modal("show");
                return;
            }
            // matheselect = maThe;
            // Lấy dữ liệu từ các cột của hàng
            const data = {
                MaTheDG: maThe, // Mã thẻ
                Name: row.children[1]?.innerText.trim() || "", // Họ tên
                SDT: row.children[4]?.innerText.trim() || "", // Số điện thoại
                NgayMuon: new Date().toISOString().split('T')[0] // Ngày mượn (hôm nay)
            };

            // Kiểm tra giá trị của dữ liệu lấy được
            console.log("Dữ liệu truyền vào modal:", data);
            //console.log("Mathe tao phieu muon:", matheselect);
            // Gán giá trị vào các phần tử modal
            Object.keys(data).forEach(id => {
                const element = document.getElementById(id);
                if (element) {
                    element.value = data[id];
                } else {
                    console.error(`Không tìm thấy phần tử với id "${id}"`);
                }
            });

            // Reset danh sách sách mượn về trạng thái trống
            const danhSachSachMuon = document.getElementById("danhSachSachMuon");
            danhSachSachMuon.innerHTML = ""; // Xóa toàn bộ nội dung trong bảng

            // Hiển thị modal
            $('#ModalPhieuMuon').modal('show');
        }



        //khong cho nhap chu
        function validateInput(event, maxQuantity) {
            // Prevent input of non-numeric characters
            if (!isNumericInput(event)) {
                event.preventDefault();
            }
            // Prevent input of 'e' or 'E'
            if (event.key === 'e' || event.key === 'E') {
                event.preventDefault();
            }
            // Ensure the input is within the allowed range (0 to maxQuantity)
            let inputValue = event.target.value;
            if (inputValue < 0 || inputValue > maxQuantity) {
                event.preventDefault();
            }
        }
        function isNumericInput(event) {
            const key = event.key;
            return (key >= '0' && key <= '9') || key === 'Backspace' || key === 'Delete' || key === 'ArrowLeft' || key === 'ArrowRight';
        }

        function taoPhieuMuon() {
            // Lấy thông tin từ form
            var maNhanVien = document.getElementById("MaNhanVien").value.trim(); // Lấy mã nhân viên
            var maTheDocGia = document.getElementById("MaTheDG").value.trim(); // Mã thẻ độc giả
            var maDK = 0;
            var tenDocGia = document.getElementById("Name").value.trim(); // Tên độc giả
            var ngayMuon = document.getElementById("NgayMuon").value; // Ngày mượn được chọn
            var hanTra = parseInt(document.getElementById("HanTra").value); // Hạn trả tính theo tuần

            // Kiểm tra các trường bắt buộc
            if (!maNhanVien || !maTheDocGia || !tenDocGia || !ngayMuon || isNaN(hanTra)) {
                document.getElementById("contentModalError").innerHTML = "Vui lòng nhập đầy đủ thông tin!";
                $("#ModalError").modal("show");
                return;
            }
            // Kiểm tra các trường bắt buộc
            if (maTheDocGia == 0) {
                document.getElementById("contentModalError").innerHTML = "Mã độc giả không tồn tại";
                $("#ModalError").modal("show");
                return;
            }
            // Tính ngày trả (ngày mượn + hạn trả * 7 ngày)
            var ngayMuonDate = new Date(ngayMuon);
            var ngayTraDate = new Date(ngayMuonDate);
            ngayTraDate.setDate(ngayTraDate.getDate() + (hanTra * 7));
            var formatNgayTra = ngayTraDate.toISOString().slice(0, 10);

            // Lấy dữ liệu từ bảng danh sách sách mượn
            var rows = document.querySelectorAll('#danhSachSachMuon tr');
            if (rows.length === 0) {
                document.getElementById("contentModalError").innerHTML = "Hãy thêm sách muốn mượn!";
                $("#ModalError").modal("show");
                return;
            }

            var listSachMuon = [];
            var listCTSachMuon = [];
            rows.forEach(row => {
                var maSach = parseInt(row.cells[0].textContent.trim());
                var maCuonSach = row.cells[1].textContent.trim();
                var tenSach = row.cells[2].textContent.trim();
                var soLuong = parseInt(row.cells[3].textContent.trim());

                if (!isNaN(maSach) && !isNaN(soLuong)) {
                    listSachMuon.push({
                        maSach: maSach,
                        tenSach: tenSach,
                        soLuong: soLuong
                    });
                    listCTSachMuon.push({
                        maCuonSach: maCuonSach,
                        tinhTrang: false // Mặc định tình trạng là true
                    });
                }
            });

            document.getElementById("contentModalConfirm").innerHTML = "Bạn có chắc muốn tạo phiếu mượn không?";
            const modal = new bootstrap.Modal(document.getElementById("confirmModal"));
            modal.show();

            // Lắng nghe sự kiện xác nhận
            const confirmButton = document.getElementById("confirmButton");
            confirmButton.onclick = function () {
                modal.hide(); // Ẩn modal
                // Dữ liệu gửi qua AJAX
                var data = {
                    MaNhanVien: maNhanVien,
                    MaTheDocGia: maTheDocGia, // Truyền mã thẻ độc giả
                    TenDocGia: tenDocGia,
                    NgayMuon: ngayMuon,
                    NgayTra: formatNgayTra,
                    MaDK: maDK,
                    listSachMuon: listSachMuon,
                    listCTSachMuon: listCTSachMuon
                };

                // Gửi yêu cầu POST để tạo phiếu mượn
                $.ajax({
                    type: "POST",
                    url: "/Admin/PhieuMuon/TaoPhieuMuon", // Đảm bảo URL chính xác
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(data),
                    success: function (response) {
                        if (response.success) {
                            document.getElementById("contentModalSuccess").innerHTML = "Thêm phiếu mượn thành công!";
                            $("#ModalSuccess").modal("show");
                            // Lấy dữ liệu PDF Base64 từ phản hồi
                            var pdfBase64 = response.pdfBase64;

                            if (pdfBase64) {
                                // Chuyển Base64 thành Blob
                                var byteCharacters = atob(pdfBase64);
                                var byteNumbers = new Array(byteCharacters.length).fill(null).map((_, i) => byteCharacters.charCodeAt(i));
                                var byteArray = new Uint8Array(byteNumbers);
                                var blob = new Blob([byteArray], { type: 'application/pdf' });

                                // Tạo URL Blob
                                var url = URL.createObjectURL(blob);

                                // Cập nhật nội dung iframe trong modal
                                var iframe = document.getElementById("pdfIframe"); // Đảm bảo HTML có iframe với id="pdfIframe"
                                iframe.src = url; // Đặt URL file PDF vào iframe

                                // Hiển thị modal chứa PDF
                                $('#ModalPDF').modal('show'); // Hiển thị modal chứa iframe với PDF

                                // Reset modal tạo phiếu mượn về trạng thái ban đầu khi đóng
                                $('#ModalPhieuMuon').on('hide.bs.modal', function () {
                                    // Lưu giá trị mã nhân viên trước khi reset
                                    currentMaNhanVien = document.getElementById("MaNhanVien").value.trim();

                                    // Reset các trường khác, không reset mã nhân viên
                                    $('#ModalPhieuMuon input, #ModalPhieuMuon select').not("#MaNhanVien").val(''); // Đặt lại giá trị trống trừ mã nhân viên
                                    $('#danhSachSachMuon').empty(); // Xóa danh sách sách mượn nếu có
                                });

                                // Khi modal PDF được đóng
                                $('#ModalPDF').on('hide.bs.modal', function () {
                                    // Đóng modal tạo phiếu mượn và reset dữ liệu
                                    $('#ModalPhieuMuon').modal('hide');
                                });
                            } else {
                                // Nếu không có dữ liệu Base64
                                document.getElementById("contentModalError").innerHTML = "Không có file PDF được trả về!";
                                $("#ModalError").modal("show");
                            }
                        } else {
                            console.log(response)
                            document.getElementById("contentModalError").innerHTML = response.message;
                            $("#ModalError").modal("show");
                        }
                    },
                    error: function (xhr, status, error) {
                        document.getElementById("contentModalError").innerHTML = "Có lỗi xảy ra khi tạo phiếu mượn.";
                        $("#ModalError").modal("show");
                        console.error("Lỗi: ", status, error);
                    }
                });
            };
        }





        //=====================  Set dữ liệu mặc định  =====================

        // Lấy ngày hiện tại
        var currentDate = new Date();

        // Định dạng ngày hiện tại thành chuỗi YYYY-MM-DD
        var formatCurrentDate = currentDate.toISOString().slice(0, 10);

        // Set ngày mượn là ngày hiện tại
        document.getElementById("NgayMuon").value = formatCurrentDate;

        // Set mã nhân viên
        var manv = @User.FindFirst("MaNV")?.Value;   // Update MaNV
        document.getElementById("MaNhanVien").value = manv;

        function changeTableShow(tableToShow, tableToHide, tableToHide2) {
            tableToShow.style.display = "block";
            tableToHide.style.display = "none";
            tableToHide2.style.display = "none";
        }

        //=====================  Xử lý tìm và thêm sách =====================

        function showNotification(message) {
            $("#notificationMessage").text(message);
            $("#notificationModal").modal("show");

            // Đảm bảo modal thông báo nằm trên modal khác
            $("#notificationModal").on("shown.bs.modal", function () {
                $(".modal-backdrop").last().css("z-index", "1055"); // Đưa backdrop của modal thông báo lên trên
                $(this).css("z-index", "1060"); // Đặt modal thông báo lên trên
            });
        }

        async function themSach() {
            const searchInput = document.getElementById("searchSach");
            const maCuonSach = searchInput.value.trim();

            if (!maCuonSach) {
                showNotification("Vui lòng nhập mã sách!");
                return;
            }

            try {
                // Gửi yêu cầu tìm kiếm sách qua API
                const response = await fetch(`/admin/phieumuon/GetByMaCuonSach/${maCuonSach}`);
                const data = await response.json();

                if (data.success) {
                    if (data.data) {
                        const danhSachSachMuon = document.getElementById("danhSachSachMuon");

                        // Kiểm tra xem sách đã tồn tại chưa
                        const existingRow = Array.from(danhSachSachMuon.children).find(row => {
                            const maCuonSachCell = row.querySelector("td:nth-child(2)");
                            return maCuonSachCell && maCuonSachCell.textContent === maCuonSach;
                        });

                        if (existingRow) {
                            showNotification("Sách đã được thêm vào danh sách mượn!");
                            return;
                        }

                        // Thêm thông tin sách vào bảng
                        const row = document.createElement("tr");

                        // Mã sách
                        const maSachCell = document.createElement("td");
                        maSachCell.textContent = data.data.maSach;
                        row.appendChild(maSachCell);

                        // Mã cuốn sách
                        const maCuonSachCell = document.createElement("td");
                        maCuonSachCell.textContent = data.data.maCuonSach;
                        row.appendChild(maCuonSachCell);

                        // Tên sách
                        const tenSachCell = document.createElement("td");
                        tenSachCell.textContent = data.data.tenSach;
                        row.appendChild(tenSachCell);

                        // Số lượng (mặc định là 1)
                        const soLuongCell = document.createElement("td");
                        soLuongCell.textContent = "1";
                        row.appendChild(soLuongCell);

                        // Thao tác (nút xóa)
                        const thaoTacCell = document.createElement("td");
                        const deleteButton = document.createElement("button");
                        deleteButton.textContent = "Xóa";
                        deleteButton.classList.add("btn", "btn-danger", "btn-sm");
                        deleteButton.type = "button";
                        deleteButton.addEventListener("click", function () {
                            xoaSach(this);
                        });
                        thaoTacCell.appendChild(deleteButton);
                        row.appendChild(thaoTacCell);

                        danhSachSachMuon.appendChild(row);

                        // Xóa giá trị trong ô tìm kiếm
                        searchInput.value = "";
                    } else {
                        showNotification("Mã cuốn sách không tồn tại. Vui lòng kiểm tra lại.");
                    }
                } else {
                    showNotification(data.message || "Lỗi tìm kiếm sách.");
                }
            } catch (error) {
                console.error("Error fetching books:", error);
                showNotification("Đã xảy ra lỗi khi tìm kiếm sách!");
            }
        }



        let currentRowToDelete = null; // Lưu trữ dòng hiện tại để xóa

        function xoaSach(button) {
            currentRowToDelete = button.parentElement.parentElement; // Lưu dòng hiện tại
            showModal();
        }

        function showModal() {
            // Kiểm tra nếu modal chưa tồn tại, tạo mới
            let modal = document.getElementById("confirmDeleteModal");
            if (!modal) {
                modal = document.createElement("div");
                modal.id = "confirmDeleteModal";
                modal.classList.add("modal");
                modal.style.display = "block";

                modal.innerHTML = `
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Xác nhận xóa</h5>
                                        <button type="button" class="close" onclick="closeModal()" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Bạn có chắc muốn xóa sách này?</p>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" onclick="closeModal()">Hủy</button>
                                        <button type="button" class="btn btn-danger" id="confirmDeleteButton">Xóa</button>
                                    </div>
                                </div>
                            </div>
                        `;

                document.body.appendChild(modal);

                // Thêm sự kiện cho nút "Xóa"
                const confirmDeleteButton = modal.querySelector("#confirmDeleteButton");
                confirmDeleteButton.addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn hành vi mặc định nếu là submit
                    if (currentRowToDelete) {
                        currentRowToDelete.remove();
                        currentRowToDelete = null;
                    }
                    closeModal();
                });
            } else {
                modal.style.display = "block";
            }
        }

        function closeModal() {
            const modal = document.getElementById("confirmDeleteModal");
            if (modal) {
                modal.style.display = "none";
                currentRowToDelete = null; // Đặt lại giá trị
            }
        }






        //=====================  Button Thêm sách  =====================
        var themSachButton = document.querySelectorAll(".themSachButton");

        //Xử lý sự kiện nhấp cho từng hàng
        themSachButton.forEach(function (button) {
            button.addEventListener("click", function () {
                // test sự kiện
                console.log("Gọi hàm thêm sách");

                var trPhiaTren = $(this).closest("tr").prev();
                if (trPhiaTren.length > 0) {

                    var maSach = trPhiaTren.find("td:nth-child(1)").text();
                    var tenSach = trPhiaTren.find("td:nth-child(2)").text();
                    var maDK = parseInt(document.getElementById("MaDK").value);
                    // Lấy số lượng hiện tại của sách
                    var soLuongHienTai = parseInt($(this).closest("tr").prev().find("td:nth-child(3)").text());

                    var soLuongMuon = this.parentElement.previousElementSibling.querySelector("#inputSoluong").value;

                    console.log("soLuongHienTai: ", soLuongHienTai);
                    console.log("Số lượng mượn: ", soLuongMuon);


                    if (!Number.isInteger(Number(soLuongMuon)) || soLuongMuon > soLuongHienTai || soLuongMuon <= 0 || soLuongMuon > 2) {
                        document.getElementById("contentModalError").innerHTML = "Hãy nhập đúng số lượng sách mượn!";
                        $("#ModalError").modal("show");
                    } else {
                        console.log("Bắt đầu gọi Ajax");
                        // Gửi yêu cầu POST để thêm sách mượn
                        $.ajax({
                            url: '@Url.Action("ThemSachMuon", "PhieuMuon")',
                            type: 'POST',
                            data: {
                                MaSach: maSach,
                                TenSach: tenSach,
                                SoLuong: soLuongMuon,
                                MaDK: maDK
                            },
                            success: function (data) {
                                if (data.success) {

                                    // Cập nhật danh sách sách mượn trong view
                                    var danhSachSachMuon = $("#danhSachSachMuon");

                                    // Xóa nội dung bảng
                                    danhSachSachMuon.empty();

                                    $.each(data.data, function (index, item) {
                                        console.log(item);

                                        var newRow = $(` <tr class="sachmuon-row" data-ma-sach="${item.maSach}">
                                                                                    <td>${item.maSach}</td>
                                                                                    <td>${item.tenSach}</td>
                                                                                    <td>${item.soLuong}</td>
                                                                                    <td>
                                                                                    <button type="button" class="btn btn-danger xoaSachMuon">Xóa</button>
                                                                                    </td>
                                                                                </tr> `);

                                        danhSachSachMuon.append(newRow);
                                    });

                                    // Gọi hàm suKienXoaSach để cập nhật sự kiện xóa cho các hàng sách mượn
                                    suKienXoaSach();

                                    // Cập nhật lại số lượng hiện tại của sách
                                    var soLuongMoi = soLuongHienTai - soLuongMuon;
                                    trPhiaTren.find("td:nth-child(3)").text(soLuongMoi);
                                }
                                else {
                                    document.getElementById("contentModalError").innerHTML = data.message;
                                    $("#ModalError").modal("show");
                                }
                            }
                        });
                    }
                } else {
                    console.log('Không tìm thấy hàng trên');
                }
            });
        });

        //===================== Xử lý Xóa sách mượn =====================
        function suKienXoaSach() {
            // Lấy danh sách các hàng trong bảng


            var danhSachSachMuonRows = document.querySelectorAll(".sachmuon-row");

            // Gán sự kiện click cho nút xóa trên từng hàng
            danhSachSachMuonRows.forEach(function (row) {
                row.querySelector(".xoaSachMuon").addEventListener("click", function () {
                    var maSach = row.querySelector("td:nth-child(1)").textContent;
                    var soLuong = row.querySelector("td:nth-child(3)").textContent;

                    var isDeleting = confirm("Bạn có chắc chắn muốn xóa sách ra khỏi danh sách mượn!");
                    if (isDeleting) {
                        xoaSachMuon(maSach, soLuong);
                    }
                });
            });
        }

        // Hàm xóa 1 sách trong danh sách sách mượn
        function xoaSachMuon(maSach, soLuong) {
            // Gửi yêu cầu AJAX đến controller để xóa sách
            $.ajax({
                url: '@Url.Action("XoaSachMuon", "PhieuMuon")',
                type: 'POST',
                data: { MaSach: maSach },
                success: function (result) {
                    if (result.success) {
                        // Xóa hàng chứa sách đã xóa khỏi bảng
                        var rowToDelete = $(`tr[data-ma-sach="${maSach}"]`);
                        rowToDelete.remove();

                        // Cập nhật lại số lượng hiện tại của sách
                        //var soLuongDaXoa = result.soLuongMuon;

                        // Tìm và cập nhật ô số lượng sách tương ứng
                        var soLuongSach = $(`.soLuongSach[data-ma-sach="${maSach}"]`);
                        var soLuongHienTai = soLuongSach.text();
                        var soLuongMoi = parseInt(soLuongHienTai) + parseInt(soLuong);

                        // Cập nhật lại số lượng hiện tại
                        soLuongSach.text(soLuongMoi);
                    } else {
                        console.log('Xóa sách không thành công');
                    }
                }
            });
        }

        function GetSachDangKy(maDK) {
            $.ajax({
                url: '@Url.Action("GetChiTietDKByMaDK", "DangKyMuonSach")',
                type: 'POST',
                data: {
                    maDK: maDK,
                },
                success: function (data) {
                    if (data.success) {
                        // Xử lý dữ liệu JSON trả về
                        var ctdk = data.data;
                        // Cập nhật danh sách sách mượn trong view
                        var danhSachSachDK = $("#danhSachSachDk");

                        danhSachSachDK.empty(); // Xóa nội dung bảng

                        console.log("ctdk: ", ctdk);

                        $.each(ctdk, function (index, item) {
                            var newRow = $(` <tr class="sachdk-row" data-ma-sach="${item.maSach}">
                                                                     <td>${item.maSach}</td>
                                                                     <td>${item.tenSach}</td>
                                                                     <td>${item.soLuong}</td>
                                                                     </tr> `);

                            danhSachSachDK.append(newRow);
                        });
                    } else {
                        console.error("Không thành công trong việc nhận dữ liệu từ server.");
                    }
                }
            });
        }



        function GetAllThongTinDangKy() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllThongTinDangKy", "PhieuMuon")',
                success: function (res) {

                    console.log(res.success);

                    if (res.success) {
                        var render = "";


                        $.each(res.result, function (i, item) {

                            console.log("Du lieu tra ve cua ham GetAllThongTinDangKy: ", res.result);

                            var NgayDK = moment(item.ngayDK);
                            var NgayDKFormatted = NgayDK.format('MM/DD/YYYY');

                            var NgayHen = moment(item.ngayHen);
                            var NgayHenFormatted = NgayHen.format('MM/DD/YYYY');

                            render += '<tr class="dkOnl-row" data-ma-thedg=">' + item.maDK + '">';
                            render += '<td>' + item.maDK + '</td>';
                            render += '<td>' + item.maThe + '</td>';
                            render += '<td>' + item.sdt + '</td>';
                            render += '<td>' + item.hoTen + '</td>';
                            render += '<td>' + NgayDKFormatted + '</td>';
                            render += '<td>' + NgayHenFormatted + '</td>';
                            render += '</tr>';
                        });

                        let danhSachThongTinDangKy = document.getElementById("DanhSachThongTinDangKy");
                        danhSachThongTinDangKy.innerHTML = render;
                    }

                },
                error: function (status) {
                    // Hiển thị cảnh báo nếu có lỗi
                    alert("Không tìm thấy dữ liệu");
                }
            });
        }
    </script>
}

